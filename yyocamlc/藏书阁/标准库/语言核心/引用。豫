
观「内建类型」之书。
观「藏书阁」之「标准库」之「数据结构」之「整数操作」之书。



「引用类」即内建「《《内建类型：引用类》》」也。

「新引用」乃承「甲」而化「甲」而「引用类」于「甲」也。
「新引用」者会「值」而《《外部调用『ref』》》于「值」也。

「读引用」乃承「甲」而化「引用类」于「甲」而「甲」也。
「读引用」者会「引用」而《《外部调用『(fun r -> !r)』》》于「引用」也。

「写引用」乃承「甲」而化「引用类」于「甲」而化「甲」而「有」也。
「写引用」者（会「引用」而会「值」而《《外部调用『(fun r v -> r := v)』》》于「引用」于「值」）也。

「：TODO：我们需要考虑加入边界检查！：」

「数组引用类」即内建「《《内建类型：数组引用类》》」也。

「新数组引用」乃承「甲」而化「甲」而化「整数」而「数组引用类」于「甲」也。
「新数组引用」者会「值」而会「长度」而《《外部调用『(fun v len -> Array.make len v)』》》于「值」于「长度」也。

「读数组引用」乃承「甲」而化「数组引用类」于「甲」而化「整数」而「甲」也。
「读数组引用」者会「引用」而会「索引」而《《外部调用『(fun arr idx -> arr.(idx))』》》于「引用」于「索引」也。

「写数组引用」乃承「甲」而化「数组引用类」于「甲」而化「整数」而化「甲」而「有」也。
「写数组引用」者（会「引用」而会「索引」而会「值」而《《外部调用『(fun arr idx v -> arr.(idx) <- v)』》》于「引用」于「索引」于「值」）也。

「获取数组长度」乃承「甲」而化「数组引用类」于「甲」而「整数」也。
「获取数组长度」者会「引用」而《《外部调用『Array.length』》》于「引用」也。



