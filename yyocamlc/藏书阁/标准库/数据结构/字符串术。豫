观「多态列」之书。
观「多态列工具」之书。

观「藏书阁」之「标准库」之「语言核心」之「内建类型」之书。
观「藏书阁」之「标准库」之「语言核心」之「续延」之书。
观「藏书阁」之「标准库」之「语言核心」之「异常」之书。
「： 寻「爻」术之书。
观「爻」术之书。 ：」

「： 注 string list。 ：」

观「整数操作」之书。

观「可选值」之书。


观「藏书阁」之「标准库」之「数学运算」之「数组转换」之书。


「串转通字符」乃化「字符串」而「字符串」列也。
「串转通字符」者会「串」而「数组转多态列」于（《《外部调用『yyGetCodePoints』》》于「串」）也。

「获取字符」乃化「字符串」而「字符串」列也。
「获取字符」者「串转通字符」也。

「通字符转串」乃化「字符串列」而「字符串」也。
「通字符转串」者会「列」而
    虑「后列」者（「多态列转数组」于「列」）而
    《《外部调用『yyCodePointsConcat』》》于「后列」也。

「合并」乃化「字符串」列而「字符串」也。
「合并」者「通字符转串」也。
「串组合并」乃化「字符串」列而「字符串」也。
「串组合并」者「通字符转串」也。


「： 「〇附〇」乃化字符串而化字符串而字符串也。
「〇附〇」者会串甲而会串乙而「通字符转串」于串甲衔串乙衔【】也。 ：」
术「甲」附「乙」盖谓「通字符转串」于【「甲」、「乙」】也。

「以串合并串」乃化「字符串」而化「字符串列」而「字符串」也。
「以串合并串」者会「分隔符」而会「列」而
    递归虑「处理」其化「字符串列」而「字符串列」者会「剩余」而
            鉴「剩余」而
 或有【】则【】
                或有「甲」衔【】则【「甲」】
                或有「甲」衔「乙」则【「甲」】衔【「分隔符」】衔（「处理」于「乙」）
        而
        虑「结果」者「处理」于「列」而
        「串组合并」于「结果」
    也。

术以「分隔符」合并「串列」盖谓「以串合并串」于「分隔符」于「串列」也。

「字符串相等吗」乃化「字符串」而化「字符串」而「爻」也。
「字符串相等吗」者会「串甲」而会「串乙」而《《外部调用『yyStringEq』》》于「串甲」于「串乙」也。


「串相等」乃化「字符串」而化「字符串」而「爻」也。
「串相等」者「字符串相等吗」也。
「字符串相等」乃化「字符串」而化「字符串」而「爻」也。
「字符串相等」者「字符串相等吗」也。

「串组相等」乃化「字符串列」而化「字符串列」而「爻」也。
「串组相等」者会「甲」而会「乙」而
    鉴「甲」、「乙」而
 或有【】、【】则「阳」
        或有（「甲头」衔「甲尾」）、（「乙头」衔「乙尾」）则（若「串相等」于「甲头」于「乙头」则「串组相等」于「甲尾」于「乙尾」否则「阴」）
        或有「其他」则「阴」也。


「是子字符串吗」乃化「字符串」而化「字符串」而「爻」也。
「是子字符串吗」者会「串甲」而会「串乙」而《《外部调用『yyIsSubstring』》》于「串甲」于「串乙」也。

术「甲」为「乙」子字符串盖谓「是子字符串吗」于「甲」于「乙」也。


「： 注：串结尾是它吗 1 2 测试1是否为2的结尾。 ：」
「串结尾是它吗」乃化「字符串」而化「字符串」而「爻」也。
「串结尾是它吗」者会「串一」而会「串二」而
    （（「多态列」之「以终否」））
        于（「字符串相等吗」）
        于（「串转通字符」于（「串一」））
        于（「串转通字符」于（「串二」））也。

术「甲」是「乙」的结尾盖谓「串结尾是它吗」于「甲」于「乙」也。

「串开头是它吗」乃化「字符串」而化「字符串」而「爻」也。
「串开头是它吗」者会「串一」而会「串二」而
    （（「多态列」之「以起否」））
        于（「字符串相等吗」）
        于（「串转通字符」于（「串一」））
        于（「串转通字符」于（「串二」））也。

术「甲」是「乙」的开头盖谓「串开头是它吗」于「甲」于「乙」也。


「：从第二个参数结尾删除长度为第一个长度的字符串：」
「去除串结尾」乃化「字符串」而化「字符串」而「字符串」也。
「去除串结尾」者会「串一」而会「串二」而
    「通字符转串」于
        （（（「多态列」之「结尾放」））
        于（（「多态列」之「长度」）于（「串转通字符」于（「串一」）））
        于（「串转通字符」于（「串二」）））也。

「：从第二个参数开头删除长度为第一个长度的字符串：」
「去除串开头」乃化「字符串」而化「字符串」而「字符串」也。
「去除串开头」者会「串一」而会「串二」而
    「通字符转串」于
        （（（「多态列」之「放」））
        于（（「多态列」之「长度」）于（「串转通字符」于（「串一」）））
        于（「串转通字符」于（「串二」）））也。

「表示串」乃化「字符串」而「字符串」也。
「表示串」者会「串」而『『』附
    递归虑「处理」其化「字符串列」而「字符串列」者会「列」而
            鉴「列」而
 或有『「：换行：」』衔「尾」则『「：「：：」换行：」』衔（「处理」于「尾」）
            或有『「：制表：」』衔「尾」则『「：「：：」制表：」』衔（「处理」于「尾」）
            或有『\』』衔「尾」则『\\\』』衔（「处理」于「尾」）
            或有『\\』衔「尾」则『\\\\』衔（「处理」于「尾」）
            或有「其他」衔「尾」则【「其他」】衔（「处理」于「尾」）
            或有【】则【】
        而
        虑「结果」者「串组合并」于（「处理」于（「获取字符」于「串」））而
        「结果」
    附『\』』也。

「获取子字符串」乃化「整数」而化「整数」而化「字符串」而「字符串」也。
「获取子字符串」者会「始」而会「止」而会「串」而
    「串组合并」于（「取」于（「止」减「始」）于（「放」于「始」于（「获取字符」于「串」）））也。

「串长度」乃化「字符串」而「整数」也。
「串长度」者会「串」而（「长度」于（「获取字符」于「串」））也。

「：第一个「爻」为从左或从右：」
「搜索单个」乃化「爻」而化「字符串」而化「字符串」而（「或可有」于「整数」）也。
「搜索单个」者会「从左」而会「搜索」而会「串」而
虑「字符们」者「获取字符」于「串」而
（（「从左折叠」于（会「当前数值」而会「当前结果」而
            若「有吗」于「当前结果」则「当前结果」否则（
                    若「以起否」于「串相等」于（「获取字符」于「搜索」）于（「放」于「当前数值」于「字符们」）
                    则（（「可有」于「当前数值」））
                    否则「当前结果」
            ）
                ） 于 「可无」于
                （（若「从左」则（会「甲」而「甲」）否则「反转」其化「整数」列而「整数」列也）
                    于（「整数范围」于「零」于（「长度」于「字符们」））
                ）
            ）
    ）也。

「串从左搜索单个」乃化「字符串」而化「字符串」而（「或可有」于「整数」）也。
「串从左搜索单个」者「搜索单个」于「阳」也。
「串从右搜索单个」乃化「字符串」而化「字符串」而（「或可有」于「整数」）也。
「串从右搜索单个」者「搜索单个」于「阴」也。

「： 
「「爻」表示」乃化「爻」而「字符串」也。
「爻」表示者会甲而
    若甲则『阳』否则『阴』也。 ：」

「字节长度」乃化「字符串」而「整数」也。
「字节长度」者会「串」而《《外部调用『yyStringByteLength』》》于「串」也。

「：字符转整数于串于序数

将返回串的第序数个byte的整数值，使用C字符串的表示方式。
序数必须小于等于字节长度，如果序数等于字节长度，将返回零：」
「字符转整数」乃化「字符串」而化「整数」而「整数」也。
「字符转整数」者会「串」而会「序数」而
    若（「序数」大于（「字节长度」于「串」））则「发生事故」于『序数超出范围』
    否则（《《外部调用『yy_豫言字符转整数』》》于「串」于「序数」）也。


「串查找替换」乃化「字符串」「：目标字符串：」
          而化「字符串」「：寻找字符串：」
          而化「字符串」「：替换字符串：」
          而「字符串」也。
「串查找替换」者会「原先」而会「寻找」而会「替换」而
    「串组合并」于（「列查找替换」
                于「串相等」
                于（「获取字符」于「原先」）
                于（「获取字符」于「寻找」）
                于（「获取字符」于「替换」））也。



「多态列表示」乃承「甲」而化（化「甲」而「字符串」）而化「甲列」而「字符串」也。
「多态列表示」者会「元素表示」而会「列」而
    『【』附（以『，』合并（「态射」于「元素表示」于「列」））附『】』也。

「串列表示」乃化「字符串列」而「字符串」也。
「串列表示」者会「列」而
    「多态列表示」于（会「甲」而「甲」）于「列」也。

「可选值表示」乃承「甲」而化（化「甲」而「字符串」）而化「或可有」于「甲」而「字符串」也。
「可选值表示」者会「元素表示」而会「可选」而
    鉴「可选」而
 或有「可无」则『可无』
        或有（「可有」于「元素」）则
            『可有于（』附（「元素表示」于「元素」）附『）』
    也。