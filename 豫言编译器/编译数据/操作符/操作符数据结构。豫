寻观标准库之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之总集之书。


寻观拓展库之顺序标识符之顺序标识符之书。

条目立元类型也。
    本地条目立化字符串而化表达式而条目也。

命名环境即条目列也。

操作符立元类型也。


优先级关系立元类型也。
    同等优先级立优先级关系也。
    更高优先级立优先级关系也。
    重置优先级立优先级关系也。

优先级信息即（（整数合整数）列合整数列）也。
    
            「：<关系 和 最高优先级的标识符：」
操作符集即操作符列合优先级信息合有也。「：一系列操作符和Precedence Ordering，只记录strictly less than，
    不包括其transitive closure，所以假设了transitivity， 不transitive的成分可以后期通过syntac sort 解决
    有bottom是顶层操作符：」

符列环境即操作符集
        合（条目列合字符串「：字符串是当前解析的文件路径：」）
        合（字符串列「：当前结构（或作用域）的所有名称，条目列可能来自不同的结构（或者父结构）：」）也。

栈素立元类型也。
    「： 栈关键字立化组件而栈素也。 ：」
    「：一个栈操作符里有多个可能的操作符匹配是优化之一，针对以下的情况：
    我们有如下操作符
        甲〇乙
        甲〇丙
        甲〇丁
        
    假设给出如下输入：
        甲（巨大的计算消耗）乙
    如果甲有三种可能，因为我们是从左往右解析，巨大的计算消耗会被解析三次，之后看到乙的时候，我们才能确定是哪一个甲
    可有避免的话，是很大的性能提升
    ：」
    栈操作符立化「符列环境」而化（操作符合整数）列而栈素也。「：整数字符串组件的序号：」
    栈陌生字立化字符串而栈素也。
    栈分隔符立栈素也。 「：仅供临时使用，（仅可存在于栈头，不可存在于栈尾）：」
    栈绑定立化字符串而栈素也。
    「： 栈树立化分析树而栈素也。 纯分析树 ：」
    栈式立化表达式而栈素也。 「：纯分析树：」
    栈文件结尾立栈素也。「：EOF：」

操作符语法类别立元类型也。
    表达式类别立操作符语法类别也。

组件立元类型也。
    字符串组件立化字符串而组件也。
    特殊字符串组件立化字符串而化（化「符列环境」合栈素列而（「符列环境」合栈素列）
                「：当该组件将要被shift的时候，
                调用改函数以更改当前的环境以及已有的输入，
                    传入的已有列不包括当前字符串组件
                    可能会更改已有列因为如果传入的是绑定，可能需要修改绑定的字符串

                    ：」）而组件也。
    元素组件立化操作符语法类别而化优先级关系而组件也。
    绑定组件立组件也。

表达式元素组件者元素组件于表达式类别也。

构造操作符立化组件列「：name components：」
            而化整数「：uid：」
            而化（化表达式列而或可有表达式
                    「：
                        如果传入的组件不符合要求 （例如模式匹配分支合并需要固定的格式），可以返回可无，
                        其他正常情况下请直接抛出异常（例如传入的参数数量不正确）
                    ：」
            ）「：elaborator，参数以正常顺序传入：」
            而化字符串「：名称，用户必须可用此名指代该操作符：」
            而化操作符语法类别「：本操作符构造的语法类别：」
            而操作符也。

构造表达式操作符乃化组件列
            而化整数
            而化（化表达式列而或可有表达式）
            而化字符串
            而操作符也。
构造表达式操作符者会组件们而会序数而会阐述而会名称而
    构造操作符于组件们于序数于阐述于名称于表达式类别也。

「结构投影符标号」者（整数也（行于下个序数））也。
「函数调用操作符标号」者（整数也（行于下个序数））也。


