
    
寻标准库之书。
观标准库之书。
寻观拓展库之顺序标识符之顺序标识符之书。

寻观豫言编译器之编译数据之编译配置之编译期输出之书。



寻观内建常量数据之书。
寻观内建常量表示方法之书。
寻观抽象语法树数据之书。
寻观抽象语法树表示之书。

    内建乃化内建常量而表达式也。
    内建者会甲而（式节点于（内建节点于甲）于【】）也。

    「内建元类型」者内建于内建类型元类型也。
    「内建元类型式」者内建于内建类型元类型也。
        
    抽象替换自由变量乃化字符串而化整数而化表达式而表达式也。
    抽象替换自由变量者循抽象替换自由变量以会绑名而会当前序数而会式而
        鉴式而 
            有自由变量于名则
                （若「串相等」于名于绑名
                则绑定变量于当前序数
                否则式
                ）
            或有绑定变量于「序数」则「绑定变量」于序数
            或有绑定于名于「下式」则绑定于名于（抽象替换自由变量于绑名于（当前序数加一）于下式）
            或有式节点于「名称」于「式列」则「式节点」于名称于（态射于（抽象替换自由变量于绑名于当前序数）于「式列」）
            或有其他则发生事故于『未有229』
    也。
    
    「：构造抽象 进行抽象于X于X X = λX.X X：」
    进行抽象乃化字符串而化表达式而表达式也。
    进行抽象者会绑名而会式而
        绑定于（可有绑名）于（抽象替换自由变量于绑名于一于式）
        也。

    进行无名抽象乃化表达式而表达式也。
    进行无名抽象者会式而
        绑定于（可无）于（式）
        也。

    解构替换绑定变量乃化整数而化表达式而化表达式而表达式也。
    解构替换绑定变量者循解构替换绑定变量以会当前序数而会替换式而会式而
        鉴式而 
            有自由变量于名则自由变量于名
            或有绑定变量于「序数」则
                （若当前序数等于序数
                则替换式
                否则绑定变量于序数）
            或有绑定于名于「下式」则绑定于名于（解构替换绑定变量于（当前序数加一）于替换式于下式）
            或有式节点于「名称」于「式列」则式节点于名称于（态射于（解构替换绑定变量于当前序数于替换式）于「式列」）
            或有「其他」则发生事故于『未有253』
    也。

    「：非重复替换变量必须：」
    解构替换绑定名非重复乃化整数而化字符串而化表达式而表达式也。
    解构替换绑定名非重复者循解构替换绑定名非重复以会当前序数而会替换自由变量名而会式而
        鉴式而 
            有自由变量于名则
                （若「串相等」于名于替换自由变量名
                则发生事故于『名称重复』
                否则自由变量于名）
            或有绑定变量于「序数」则
                （若当前序数等于序数
                则自由变量于（替换自由变量名）
                否则绑定变量于序数）
            或有绑定于名于「下式」则绑定于（鉴名而
                                            有（可有「内名」）则（若「串相等」于内名于替换自由变量名「：如果相等则替换，这样可以保证如果一个复杂表达式只用该函数解构抽象，也不会遇到相同的抽象：」
                                                                    则（可有（下个字符序数于内名））
                                                                    否则名）
                                            或有「可无」则「可无」）
                                    于（解构替换绑定名非重复于（当前序数加一）于替换自由变量名于下式）
            或有式节点于「名称」于「式列」则式节点于名称于（态射于（解构替换绑定名非重复于当前序数于替换自由变量名）于「式列」）
            或有「其他」则发生事故于『未有270』
    也。
    
    替换抽象名称乃化字符串而化表达式而（表达式）也。
    替换抽象名称者会新名而会式而鉴式而
        有绑定于（名）于「下式」则
            绑定于（可有新名）于下式
        或有「其他」则发生事故于『不可替换抽象于非绑定式』
        也。




表达式完整性检查乃化整数而化表达式而有也。
表达式完整性检查者循表达式完整性检查以会绑定变量上限而会式而
    鉴式而
        有自由变量于名则
            （若存在吗于（会串而「串相等」于串于名）于
                    （态射于（会量而 （内建常量表示于量） ）于所有内建常量）
                则元
                否则发生事故于『表达式不完整，出现自由变量：』附名）
        或有绑定变量于「序数」则
                （若绑定变量上限小于序数
                则发生事故于『表达式不完整，出现绑定变量：』附（整数表示于序数）
                否则元）
        或有绑定于名于「下式」则（表达式完整性检查于（绑定变量上限加一）于下式）
        或有式节点于「名称」于「式列」则（（有列也态射于（表达式完整性检查于绑定变量上限）于「式列」）；元）
        或有「其他」则发生事故于『未有463』
        也。

   
获取可能绑定名乃化表达式而字符串也。
获取可能绑定名者会式而鉴式而
    有绑定于（可有名）于「下式」则名
    或有绑定于（可无）于「下式」则
        （虑名者下个字符序数于『绑』而名）
    或有「其他」则发生事故于『不可读取非绑定式』附（表达式表示于式）
    也。

更新可能绑定名乃化表达式而表达式也。
更新可能绑定名者会式而鉴式而
    有绑定于（可有名）于「下式」则
        （虑名者下个字符序数于名附『_更新_』而
            绑定于（可有名）于「下式」）
    或有绑定于（可无）于「下式」则
        （虑名者下个字符序数于『绑』而
            绑定于（可有名）于「下式」）
    或有「其他」则发生事故于『不可读取非绑定式』附（表达式表示于式）
    也。

更新可能绑定名特殊变换乃化（化字符串而字符串）而化表达式而表达式也。
更新可能绑定名特殊变换者会变换而会式而鉴式而
    有绑定于（可有名）于「下式」则
        （虑名者下个字符序数于（变换于（名附『_更新_』））而
            绑定于（可有名）于「下式」）
    或有绑定于（可无）于「下式」则
        （虑名者下个字符序数于『绑』而
            绑定于（可有名）于「下式」）
    或有「其他」则发生事故于『不可读取非绑定式』附（表达式表示于式）
    也。


绑定变量少一乃化整数而化表达式而表达式也。
绑定变量少一者循绑定变量少一以会减少变量序数而会式而
    尝试运行于（会无而
        鉴式而 
            有自由变量于名则自由变量于名
            或有绑定变量于「序数」则
                （若序数小于「减少变量序数」
                则绑定变量于序数
                否则发生事故于『无法减少绑定变量』）
            或有绑定于名于「下式」则绑定于名于（绑定变量少一于（「减少变量序数」加一）于下式）
            或有式节点于「名称」于「式列」则式节点于名称于（态射于（绑定变量少一于「减少变量序数」）于「式列」）
            「： 或有结构表达式于「声明列」则发生事故于『未有150』 ：」
            或有「其他」则发生事故于『未有487』
        ）于（会异常串而
            发生事故于异常串附『=》在试图减少序数为』附（整数表示于「减少变量序数」）附『的变量，于表达式：』附（表达式表示于式）附『时「：换行：」』
        ）
        也。
        

绑定变量包括乃化整数而化表达式而爻也。
绑定变量包括者循绑定变量包括以会目标变量序数而会式而
        虑无者「编译调试打印行」于『binder_is_named』于（会无而『检查绑定变量包括』附（表达式表示于式））而 
        虑结果者
        （爻也鉴式而 
            有自由变量于名则阴
            或有绑定变量于「序数」则
                （
                    若序数等于「目标变量序数」
                则
                （虑无者「编译调试打印行」于『binder_is_named』于（会无而『找到绑定变量』附（表达式表示于式））而 
                阳）
                否则阴）
            或有绑定于名于「下式」则（绑定变量包括于（「目标变量序数」加一）于下式）
            或有式节点于「名称」于「式列」则（存在吗于（绑定变量包括于「目标变量序数」）于「式列」）
            或有「其他」则发生事故于『未有504』
        ）而
        虑无者「编译调试打印行」于『binder_is_named』于（会无而『完成检查绑定变量包括』附（爻表示于结果）附（表达式表示于式））而 
        结果
        也。

抽象是有名的乃化表达式而（爻）也。
抽象是有名的者会式而
    虑无者「编译调试打印行」于『binder_is_named』于（会无而『检查抽象是有名的，』附（表达式表示于式））而 
    虑结果者（爻也鉴式而
    有绑定于「可能名」于「下式」则
        （
            绑定变量包括于一于下式
        ）
    或有「其他」则发生事故于『不可解构非抽象式：』附（表达式表示于式））
    而
    虑无者「编译调试打印行」于『binder_is_named』于（会无而『抽象是有名的，结果：』附（爻表示于结果）附（表达式表示于式））而 
    结果
    也。

        
    
「：解构抽象 结构抽象于 X.X X = (X, X X)，不会重复名称：」
解构抽象乃化表达式而（字符串合表达式）也。
解构抽象者会式而鉴式而
    有绑定于「可能名」于「下式」则
        （虑名者（获取可能绑定名于式）而
            尝试运行于（会无而
                名与（解构替换绑定名非重复于一于（名）于下式） 
            ）于（会错误而
                虑新名者下个字符序数于名而
                新名与（解构替换绑定名非重复于一于（新名）于下式） 
            ）
        ）
    或有「其他」则发生事故于『23不可解构非绑定式：』附（表达式表示于式）
    也。

解构无名抽象乃化表达式「：绑定式：」而表达式也。
解构无名抽象者会绑定式而
    鉴绑定式而
        有绑定于「可能名」于「下式」则
            （ 下式 ）
        或有「其他」则发生事故于『206不可解构非绑定式：』附（表达式表示于绑定式）也。

「：使用第一个参数作为序数的模板，将第二个参数转换为绑定：」
构造抽象乃化字符串而化（化字符串而表达式）而表达式也。
构造抽象者会串而会式构造而
    虑新名者下个字符序数于串而
    进行抽象于新名于（式构造于新名）
    也。

抽象表达式带名操作条件乃化字符串列「：返回的字符串必须不出现在这个名中：」而
                    化表达式而化（化字符串而化表达式而表达式）而表达式也。
抽象表达式带名操作条件者会不重复名而会式而会操作而鉴式而
    有绑定于「可能名」于「下式」则
        （虑名者（虑目标名者（获取可能绑定名于式）而
                    「：如果目标名重复，则替换：」
                        若「存在吗」于（「串相等」于目标名）于不重复名则
                        （下个字符序数于目标名）
                        否则（目标名）
                    ）
            而
        
            尝试运行于（会无而
                进行抽象于名于（操作于名于（解构替换绑定名非重复于一于（名）于下式））
            ）于（会错误而
                若（「串相等」于错误于『名称重复』）则（
                    虑新名者下个字符序数于名而
                    进行抽象于新名于（操作于新名于（解构替换绑定名非重复于一于（新名）于下式））
                ）否则（发生事故于「错误」）
            ）
        ）
    或有「其他」则发生事故于『43不可解构非绑定式：』附（表达式表示于式）
    也。

抽象表达式操作乃化表达式而化（化表达式而表达式）而表达式也。
抽象表达式操作者会式而会操作而「抽象表达式带名操作条件」于【】于式于（会串而会式而操作于式）也。


「：解构抽象 结构抽象于λX.X X = (X, X X)，其中X必须符合条件，另外X也不会重复表达式中变量：」
解构抽象名称条件乃化表达式而化（化字符串而爻）而（字符串合表达式）也。
解构抽象名称条件者会式而会条件而鉴式而
    有绑定于「可能名」于「下式」则
        （虑名者（获取可能绑定名于式）而
            （虑「
                选名称乃化字符串而字符串也。
                选名称者循选名称以会串而
                    若（条件于串）
                    则串
                    否则（选名称于（下个字符序数于串））也。
                选名者选名称于名也。
                尝试运行于（会无而
                    选名与（解构替换绑定名非重复于一于（选名）于下式）
                ）于（会错误而
                    若（「串相等」于错误于『名称重复』）则（
                        虑新名者下个字符序数于选名而
                            新名与（解构替换绑定名非重复于一于（新名）于下式）
                    ）否则（发生事故于「错误」）
                ）
            」
            ）
        ）
    或有「其他」则发生事故于『262不可解构非绑定式：』附（表达式表示于式）
    也。

解构无绑定抽象乃化字符串而化表达式而表达式也。
解构无绑定抽象者会调试信息而会式而鉴式而
    有绑定于（名）于「下式」则
        尝试运行于（会无而绑定变量少一于一于下式）于（会错误而发生事故于错误附『，在解构无绑定抽象时，』附调试信息附『：』附（表达式表示于式））
    或有「其他」则发生事故于『267不可解构非绑定式：』附（表达式表示于式）
    也。
「：式替换 X (\Y Z) = [X/Y] Z：」
式替换乃化表达式而化表达式而表达式也。
式替换者会替换式而会被替换式而
    「： 虑不要者打印行于（『试图用』附（表达式表示于替换式）附『对』附（表达式表示于被替换式）附『进行替换』）而 ：」
    鉴被替换式而
        有绑定于（名）于「下式」则
            （解构替换绑定变量于一于替换式于下式）
        或有「其他」则发生事故于（『不可替换非绑定式：』附
        『「：换行：」试图用』附（表达式表示于替换式）附『对』附（表达式表示于被替换式）附『进行替换』）
    也。

「：用自由变量替换绑定，要求自由变量不重复：」
式替换不重复名乃化字符串而化表达式而表达式也。
式替换不重复名者会替换自由变量而会被替换式而
    鉴被替换式而
        有绑定于（名）于「下式」则
            （解构替换绑定名非重复于一于替换自由变量于下式）
        或有「其他」则发生事故于（『不可替换非绑定式：』附
        『「：换行：」试图用』附（替换自由变量）附『对』附（表达式表示于被替换式）附『进行替换』）
    也。

「： 式有名替换 X Y Z = [X/Y]Z ：」
式有名替换乃化表达式而化字符串而化表达式而表达式也。
式有名替换者会替换式而会替换自由变量而会被替换式而
    式替换于替换式于（进行抽象于替换自由变量于被替换式）也。

结构名称转表达式乃化字符串列而表达式也。
结构名称转表达式者循结构名称转表达式以会名称而
    鉴名称而
        有【】则发生事故于『不可为空』
        或有单衔【】则自由变量于单
        或有「其他」则式节点于
            （结构投影于（第N个于（（长度于名称）减一）于名称））于
            【结构名称转表达式于（取于（（长度于名称）减一）于名称）】也。

「： Simultaneous Substitutions ：」
同时式替换乃化表达式列而化字符串列而化表达式而表达式也。
同时式替换者会替换而会变量而会前式而
    若（（长度于替换）不等于（长度于变量））
    则发生事故于『同时替换，长度不同』
    否则（
        虑抽象后式者从右折叠于（会变而会式而
            进行抽象于变于式
            ）于前式于变量而
        虑替换后式者从左折叠于（会替而会式而
            式替换于替于式
        ）于抽象后式于替换而
        替换后式
    ）也。

「：会包含重复的：」
读取自由元变量乃化表达式而整数列也。
读取自由元变量者循读取自由元变量以会式而
    鉴式而有自由变量于名则【】
    或有绑定变量于名则【】
    或有式节点于（元变量于数）于参则【数】
    或有式节点于（「其他节点」）于参则「串联」于（态射于「读取自由元变量」于参）
    或有绑定于名于「下式」则读取自由元变量于下式
    也。

「：会包含重复的：」
读取模式匹配新变量乃化表达式而字符串列也。
读取模式匹配新变量者循读取模式匹配新变量以会式而
    鉴式而有自由变量于名则【】
    或有绑定变量于名则【】
    或有式节点于（模式匹配新变量于名）于参则【名】
    或有式节点于（「其他节点」）于参则「串联」于（态射于「读取模式匹配新变量」于参）
    或有绑定于名于「下式」则读取模式匹配新变量于下式
    也。

「：会包含重复的：」
读取式自由变量乃化表达式而字符串列也。
读取式自由变量者循读取式自由变量以会式而
    虑结果者（字符串列也 （鉴式而有自由变量于名则【名】
                或有式节点于（模式匹配分支）于「模式」衔「结果」衔【】则
                    （「列减」于「串相等」于（（读取式自由变量于「模式」）接（读取式自由变量于结果））于（读取模式匹配新变量于模式））
                或有式节点于（其他节点）于参则「串联」于（态射于「读取式自由变量」于参）
                或有绑定于名于「下式」则读取式自由变量于（下式）
                或有绑定变量于名则【】））而
    「： 虑无者（打印行于『读取表达式自由变量：』附（表达式表示于式）附『。得到了自由变量：』附（以『，』合并（结果）））而 ：」
        结果
    也。

自由变量在式出现乃化字符串而化表达式而爻也。
自由变量在式出现者会串而会式而
    「存在吗」于（「串相等」于串）于（读取式自由变量于式）也。

自由变量不在式出现乃化字符串而化表达式而爻也。
自由变量不在式出现者会串而会式而
    非于（自由变量在式出现于串于式）也。

自由变量在式出现次数乃化字符串而化表达式而整数也。
自由变量在式出现次数者循自由变量在式出现次数以会串而会式而
     （鉴式而有自由变量于名则（若「串相等」于名于串则一否则零）
                或有式节点于「其他节点」于参则「具体列」之「求和」于（态射于（自由变量在式出现次数于串）于参）
                或有绑定于名于「下式」则自由变量在式出现次数于串于（下式）
                或有绑定变量于名则零）
    也。
    
「：获取所有的依赖文件名，会包含重复的：」
读取文件引用依赖乃化表达式而字符串列也。
读取文件引用依赖者循读取文件引用依赖以会式而
    鉴式而有自由变量于名则【】
    或有绑定变量于名则【】
    或有式节点于（文件引用节点于串）于【】则【串】
    或有式节点于（文件内存引用节点于串）于【】则【串】
    或有式节点于（「其他节点」）于参则「串联」于（态射于「读取文件引用依赖」于参）
    或有绑定于名于「下式」则读取文件引用依赖于下式
    也。

「：获取所有的调用的函数名，会包含重复的：」
读取函数引用依赖乃化表达式而字符串列也。
读取函数引用依赖者循读取函数引用依赖以会式而
    鉴式而有自由变量于名则【】
    或有绑定变量于名则【】
    或有式节点于（函数引用节点于串）于【】则【串】
    或有式节点于（「其他节点」）于参则「串联」于（态射于「读取函数引用依赖」于参）
    或有绑定于名于「下式」则读取函数引用依赖于下式
    也。


式递归不解构抽象乃承甲而化表达式而
    化（化表达式而或可有「甲」）而
    化甲「：绑定变量值：」而
    化（化节点名称而化甲列而甲）而甲也。
式递归不解构抽象者循式递归不解构抽象以会式而会测试递归而会默认值而会合并而
    鉴式而
    有自由变量于名则（
        鉴测试递归于式而
            有「可无」则发生事故于『递归不解构抽象在自由变量获得了可无』
            或有（可有「结果」）则结果
    ）
    或有绑定变量于名则（
        默认值
        「： 鉴测试递归于式而
            有「可无」则发生事故于『递归不解构抽象在绑定变量获得了可无』
            或有（可有「结果」）则结果 ：」
    ）
    或有式节点于（「节点」）于「参数」则（
        鉴测试递归于式而
            有「可无」则（
                「合并」于「节点」于（态射于（会参而式递归不解构抽象于参于「测试递归」于默认值于「合并」）于参数）
            ）
            或有（可有「结果」）则结果
    ）
    或有绑定于名于「下式」则（
         式递归不解构抽象于「下式」于「测试递归」于默认值于「合并」
    ）
    也。

「：返回者如果自由变量不再lambda节点下出现：」
自由变量在式顶层出现乃化表达式而化字符串而爻也。
自由变量在式顶层出现者循自由变量在式顶层出现以会式而会名而
    式递归不解构抽象于式于（
        会内式而
            鉴内式而
                有「自由变量」于「内名」则（可有（「串相等」于名于「内名」））
                或有（式节点于（「拉姆达抽象」于形）于参）则（可有阴）
                或有（式节点于（「拉姆达抽象带类型」于形）于参）则（可有阴）
                或有「其他」则「可无」
    ）于「阴」于（会节点名而「从左折叠」于「或者」于阴）也。

表达式统一操作乃化（化表达式而表达式）而化表达式而表达式也。
表达式统一操作者会操作而会式而
    鉴式而 
        有自由变量于名则自由变量于名
        或有绑定变量于「序数」则 （发生事故于『不应出现绑定变量443』）
        或有绑定于名于「下式」则（抽象表达式操作于式于「操作」）
        或有式节点于「名称」于「式列」则式节点于名称于（态射于（操作）于「式列」）
        或有「其他」则发生事故于『未有487』
        也。


表达式可选操作乃化（化表达式而或可有表达式）而化表达式而表达式也。
表达式可选操作者循表达式可选操作以会操作而会式而
    鉴（操作于式）而
        有（可有「后式」）则后式
        或有「可无」则（表达式统一操作于
            （表达式可选操作于操作）于式
        ）
        也。
