
寻观标准库之书。
寻观抽象语法树数据之书。
寻观抽象语法树基础操作之书。
寻观抽象语法树表示之书。
寻观内建常量数据之书。

寻观拓展库之顺序标识符之顺序标识符之书。

「： 寻观豫言编译器之编译步骤之类型检查之元变量管理之书。 ：」

类型转定义乃化表达式而或可有表达式也。
类型转定义者循类型转定义式以会式而
    鉴式而
        有（式节点于（签名实现节点）于（类）衔（项）衔【】）则（可有（项））
        或有「其他」则「可无」
        也。

「函数类型」乃化表达式而化表达式而表达式也。
「函数类型」者会定义域而会值域而
    式节点于（派抽象于显式）于【定义域，（进行无名抽象于值域）】也。
整数类型者式节点于（单类型签名节点）于（【内建于内建类型整数】）也。
爻类型者式节点于（单类型签名节点）于（【内建于内建类型爻】）也。
字符串类型者式节点于（单类型签名节点）于（【内建于内建类型字符串】）也。
动态分类值类型者式节点于（单类型签名节点）于（【内建于内建类型动态分类值】）也。
有类型者式节点于（单类型签名节点）于（【内建于内建类型有】）也。
自由变量类型者遇字符串者名而式节点于（单类型签名节点）于（【自由变量于名】）也。

内建物类型乃化内建常量而表达式也。「：Self - referential 包含对于自我的引用， used to initialize context 用来初始化命名环境 ：」
内建物类型者会量而鉴量而
    有「内建类型字符串」      则式节点于（静态单例类型节点）于【内建于「内建类型元类型」，内建于内建类型字符串】
    或有「内建类型整数」        则式节点于（静态单例类型节点）于【内建于「内建类型元类型」，内建于内建类型整数】
    或有「内建类型小数」       则式节点于（静态单例类型节点）于【内建于「内建类型元类型」，内建于「内建类型小数」】
    或有「内建类型动态分类值」     则式节点于（静态单例类型节点）于【内建于「内建类型元类型」，内建于「内建类型动态分类值」】
    或有「内建类型有」         则式节点于（静态单例类型节点）于【内建于「内建类型元类型」，内建于「内建类型有」】
    或有「内建类型爻」         则式节点于（静态单例类型节点）于【内建于「内建类型元类型」，内建于「内建类型爻」】
    或有「内建类型元类型」       则式节点于（静态单例类型节点）于【式节点于签名类型类型占位节点于【】，内建于「内建类型元类型」】
    或有「内建爻阳」          则式节点于（静态单例类型节点）于【式节点于（单类型签名节点）于（【内建于内建类型爻】），内建于「内建爻阳」】
    或有「内建爻阴」          则式节点于（静态单例类型节点）于【式节点于（单类型签名节点）于（【内建于内建类型爻】），内建于「内建爻阴」】
    或有「内建有元」          则（式节点于（静态单例类型节点）于【式节点于「单类型签名节点」于【内建于内建类型有】，内建于「内建有元」】）
    或有「内建函数整数相等」    则函数类型于（整数类型）于（函数类型于（整数类型）于爻类型）
    或有「内建函数整数大于」    则函数类型于（整数类型）于（函数类型于（整数类型）于爻类型）
    或有「内建函数整数减」    则函数类型于（整数类型）于（函数类型于（整数类型）于整数类型）
    或有「内建函数抛出异常」    则
        （式节点于（派抽象于显式）于（【内建元类型式，进行抽象于『乙』于（
            函数类型于（字符串类型）于（自由变量类型于『乙』）
        ）】））
    或有「内建函数尝试运行」    则
        （式节点于（派抽象于显式）于（【内建元类型式，进行抽象于『乙』于（
            函数类型于（
                式节点于（签名递归节点于【『尝试』，『遇异』】）于【进行无名抽象于（
                    式节点于（正则签名节点于『尝试』）于【
                        函数类型于（有类型）于（自由变量类型于『乙』），
                            式节点于（正则签名节点于『遇异』）于 【
                                    函数类型于（字符串类型）于（自由变量类型于『乙』），
                                        式节点于（空签名节点）于【】
                                】
                    】）
                】
            ）于（自由变量类型于『乙』）
        ）】））
    或有「内建函数以当前续延调用」    则（
        式节点于（派抽象于隐式）于【内建元类型式，进行抽象于『乙』于（
            函数类型于（
                函数类型于（
                    式节点于（派抽象于隐式）于【内建元类型式，进行抽象于『丙』于（
                        函数类型于（自由变量类型于『乙』）于（自由变量类型于『丙』）
                    ）】
                ）于（自由变量类型于『乙』）
            ）于（自由变量类型于『乙』）
        ）】）
    或有 「其他」            则（式节点于待定节点于【】）
    也。

「：会包含重复的，rigid variable：」
读取式自由硬性变量乃化表达式而字符串列也。
读取式自由硬性变量者循读取式自由硬性变量以会式而
    鉴式而有自由变量于名则【名】
    或有绑定变量于名则【】
    或有式节点于（元变量于数）于参则【】
    或有式节点于（其他节点）于参则「串联」于（态射于「读取式自由硬性变量」于参）
    或有绑定于名于「下式」则读取式自由硬性变量于（下式）
    也。


是自由变量乃化表达式而爻也。
是自由变量者会式而鉴式而
    有（自由变量于名）则阳
    或有其他则阴也。

表达式是绑定乃化表达式而爻也。
表达式是绑定者会式而鉴式而
    有绑定于名于「下式」则阳
    或有其他则阴也。

表达式是返回自由变量乃化表达式而爻也。
表达式是返回自由变量者会式而鉴式而
    有绑定于名于「下式」则（
        虑抽象名及后下式者解构抽象于「式」而
        鉴（抽象名及后下式中一）而
            有（自由变量于「变量名」）则
                （「串相等」于（抽象名及后下式中零）于「变量名」）
            或有「其他」则阴
    ）
    或有其他则阴也。
「： 
读取自由变量变量名乃化表达式而字符串也。
读取自由变量变量名者会式而鉴式而
    有（自由变量于名）则名
    或有其他则发生事故于『不是自由变量，不可读取自由变量变量名』也。 ：」

「：如果顶层是签名，则返回阳，如果是结构，则返回阴，否则抛出异常：」
是签名不是结构乃化表达式而爻也。
是签名不是结构者会式而鉴式而
    有（式节点于（「签名实现节点」）于参）则（阴）
    或有（式节点于（「签名递归节点」于名）于参）则（阳）
    或有其他则（发生事故于『不是签名，也不是结构：』附（表达式表示于式））也。

「： 读取自由变量乃化表达式而字符串也。
读取自由变量者会式而鉴式而
    有（自由变量于名）则名
    或有其他则发生事故于（『不是自由变量，而是』附（表达式表示于式））也。 ：」

「：返回的绑定不会重复表达式中的字符串，也不会重复自由变量：」

是构造中的对子类型乃化表达式而爻也。
是构造中的对子类型者循是构造中的对子类型以会式而鉴式而
    有（式节点于「对子类型节点结尾」于【】）则阳
    或有（式节点于「对子类型节点」于左衔右衔【】）则（「是构造中的对子类型」于右）
    或有其他则（阴）也。

模式匹配新变量转自由变量乃化表达式而表达式也。
模式匹配新变量转自由变量者循模式匹配新变量转自由变量以会式而
    鉴式而
    有自由变量于名则 自由变量于名
    或有绑定变量于名则 绑定变量于名
    或有式节点于（模式匹配新变量于名）于参则 自由变量于名
    或有式节点于「其他节点」于参则 式节点于（其他节点）于（态射于模式匹配新变量转自由变量于参）
    或有绑定于名于「下式」则 抽象表达式操作于式于「模式匹配新变量转自由变量」
    也。


式文件引用替换乃化（化字符串而或可有表达式）而化表达式而表达式也。
式文件引用替换者循式文件引用替换以会替换而会式而
    鉴式而
    有自由变量于名则 自由变量于名
    或有绑定变量于名则 绑定变量于名
    或有式节点于（文件引用节点于「文件名」）于【】则
        （鉴替换于文件名而
            有（可有「替换式」）则替换式
            或有「可无」则式）
    或有式节点于「其他节点」于参则 式节点于（其他节点）于（态射于（式文件引用替换于替换）于参）
    或有绑定于名于「下式」则 抽象表达式操作于式于（「式文件引用替换」于替换）
    也。


移除指定的递归变量乃化字符串而化表达式而表达式也。
移除指定的递归变量者循移除指定的递归变量以会搜索名而会式而
    鉴式而
        有自由变量于名则 自由变量于名
        或有绑定变量于名则 绑定变量于名
        或有式节点于（递归变量节点）于（自由变量于「变量名」）衔【】则
            （若「串相等」于「变量名」于搜索名
                则（自由变量于「变量名」）
                否则式）
        或有式节点于「其他节点」于参则 式节点于（其他节点）于（态射于（移除指定的递归变量于搜索名）于参）
        或有绑定于名于「下式」则 抽象表达式操作于式于（「移除指定的递归变量」于搜索名）
    也。

是直接变量乃化表达式而爻也。
是直接变量者会式而鉴式而
    有（自由变量于名）则阳
    或有式节点于（自由变量标注节点于「标注」）于（自由变量于名）衔【】则阳
    或有其他则阴也。

读取直接变量乃化表达式而字符串也。
读取直接变量者会式而鉴式而
    有（自由变量于名）则名
    或有式节点于（自由变量标注节点于「标注」）于（自由变量于名）衔【】则名
    或有其他则发生事故于（『不是直接变量，而是』附（表达式表示于式））也。

树组找到定义乃化抽象语法树组而化字符串而爻合表达式也。
树组找到定义者会树组而会搜索串而
    尝试运行于（会无而（（爻合表达式）也（「列表搜索」之「列表读取二」于树组于搜索串））
    ）于（会错误而
    发生事故于错误附『「：换行：」在找定义时：』附（以『，』合并（态射于三对子取零于树组））
    ）
    也。

简单内联虑变换乃化表达式「：当前简单式：」而
    化（化字符串而表达式）「：继续，见求值正则变换：」而表达式也。
简单内联虑变换者会式而会继续而
   （虑名者（下个字符序数于『变_』）而
        式节点于「内联虑」于【式，进行抽象于（名）于（继续于名）】
        ） 也。


解构抽象并继续乃承甲而化表达式「：绑定式：」而
    化（化字符串而化表达式「：解构后的绑定式：」而甲）而甲也。
解构抽象并继续者会绑定式而会后续而
    虑绑定名及后绑定式者解构抽象于绑定式而
        后续于（绑定名及后绑定式中零）于（绑定名及后绑定式中一）也。

解构抽象不重复名称乃化表达式而化字符串列而字符串合表达式也。
解构抽象不重复名称者会式而会已有而
    解构抽象名称条件于式于（会串而非于（存在吗于（「串相等」于串）于「已有」））也。

解构抽象不重复名并继续乃承甲而化字符串列而化表达式「：绑定式：」而
    化（化字符串而化表达式「：解构后的绑定式：」而甲）而甲也。
解构抽象不重复名并继续者会不重复而会绑定式而会后续而
    虑绑定名及后绑定式者解构抽象不重复名称于绑定式于不重复而
    若「存在吗」于（「串相等」于（绑定名及后绑定式中零））于不重复
        则发生事故于（『219不重复』附『，名称：』附（「多态列表示」于（会甲而甲）于「不重复」）附『，式：』附（表达式表示于绑定式））
        否则后续于（绑定名及后绑定式中零）于（绑定名及后绑定式中一）也。

是直接返回自由变量绑定乃化表达式而爻也。
是直接返回自由变量绑定者会式而
    若（表达式是绑定于式）
    则（
        解构抽象并继续于式于（会名而会内式而
            若（「是直接变量」于内式）
            则（「串相等」于（「读取直接变量」于内式）于名）
            否则阴
        ）
    ）
    否则阴也。


表达式收集元素乃承甲而化（化表达式而或可有甲）而化表达式而甲列也。
表达式收集元素者循「表达式收集元素」以会操作而会式而
    虑递归者「表达式收集元素」于操作而
    （鉴操作于式
        而有（可有「值」）则【值】
        或有「可无」则【】）
    接（
        鉴式而 
            有自由变量于名则【】
            或有绑定变量于「序数」则【】
            或有绑定于名于「下式」则（解构抽象并继续于式于（会名而会下式而递归于下式））
            或有式节点于「名称」于「式列」则「串联」于（态射于（递归）于「式列」）
            或有「其他」则发生事故于『未有487』
        ）
        也。