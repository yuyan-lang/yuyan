
寻标准库之书。
观标准库之书。

寻具体语法树之书。
观具体语法树之书。

寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之总集之书。



「： 观抽象语法树之书。 ：」
寻表达式解析之书。
观表达式解析之书。

寻观豫言编译器之编译数据之操作符之内建操作符之总集之书。
寻观豫言编译器之编译数据之操作符之操作符操作之书。
寻观豫言编译器之编译数据之操作符之操作符集术之书。


寻观豫言编译器之编译数据之抽象绑定树结构之模块操作之书。
寻观豫言编译器之编译步骤之近似类型检查之近似类型检查之书。

寻函数合集之书。

寻观豫言编译器之编译数据之抽象绑定树结构之符列环境术之书。
寻观豫言编译器之编译数据之抽象绑定树结构之命名环境术之书。

寻导入解析之书。

寻观拓展库之顺序标识符之顺序标识符之书。

寻观豫言编译器之编译数据之抽象绑定树结构之粗语法树之书。
寻观豫言编译器之编译数据之操作符之操作符数据结构之书。
寻观豫言编译器之编译数据之编译配置之编译期输出之书。

寻观抽象语法分析工具之书。
寻观豫言编译器之编译步骤之总体过程之编译文件缓存工具之书。
寻观豫言编译器之编译数据之编译配置之全局配置之书。

「：unif bug：」




更新操作符结合及优先级乃化「符列环境」而化字符串而化「操作符结合性」而「符列环境」也。
更新操作符结合及优先级者会境而会符名而会「结合性」而
    「符列环境更新操作符集」于境于（
        「更新集操作符」于（
                「符列环境读取操作符标号」于境于符名
            ）于（
                鉴「结合性」而
                    有「无结合」则（会符而符）
                    或有「左结合」则
                            （会符而
                                虑符二者「：先左后右：」
                                （更新组件于符于零于（会组件而鉴组件而
                                        有元素组件于「更高优先级」则元素组件于「同等优先级」
                                        或有元素组件于「同等优先级」则元素组件于「同等优先级」
                                        或有「其他」则发生事故于『最左组件问题：』附（操作符表示于符）
                                    ））而
                                虑符三者
                                （更新组件于符二于（（长度于（获取所有组件于符））减一）于（会组件而鉴组件而
                                        有元素组件于「更高优先级」则元素组件于「更高优先级」
                                        或有元素组件于「同等优先级」则元素组件于「更高优先级」
                                        或有字符串组件于串则字符串组件于串
                                        或有特殊字符串组件于串于「境转」则特殊字符串组件于串于境转
                                        或有「其他」则发生事故于『最右组件问题：』附（操作符表示于符）
                                ））而
                                符三）
                    或有「右结合」则
                            （会符而
                                虑符二者
                                （更新组件于符于零于（会组件而鉴组件而
                                        有元素组件于「更高优先级」则元素组件于「更高优先级」
                                        或有元素组件于「同等优先级」则元素组件于「更高优先级」
                                        或有字符串组件于串则字符串组件于串
                                        或有特殊字符串组件于串于「境转」则特殊字符串组件于串于境转
                                        或有「其他」则发生事故于『最左组件问题：』附（操作符表示于符）
                                ））而
                                虑符三者
                                （更新组件于符二于（（长度于（获取所有组件于符））减一）于（会组件而鉴组件而
                                        有元素组件于「更高优先级」则元素组件于「同等优先级」
                                        或有元素组件于「同等优先级」则元素组件于「同等优先级」
                                        或有「其他」则发生事故于『最右组件问题：』附（操作符表示于符）
                                    ））而
                                符三）
            ）于（「符列环境读取操作符集」于境）
        ）也。
    

「打开或导出结构后续处理」乃
                    化字符串「：标签名：」而
                    化爻「：是否导出：」而
                    化（或可有字符串）「：可能的抽象名：」而
                    化表达式「：类型式：」而
                    化表达式「：定义式：」而
                    化（化表达式而表达式）「：后续处理：」而
                    化表达式而表达式「：包裹的后续处理：」也。
「打开或导出结构后续处理」者会标签名而会导出而会可能抽象名而会定义式类而会投影定义式而会先前后续处理而会原尾式而
        虑处理后尾式者（先前后续处理）于原尾式而
        「：如果一个打开的变量没有使用，在此处就优化掉：」
        虑进行优化者（
            若导出
            则阴「：如果导出，那么不可以进行优化：」
            否则（
                （鉴（可能抽象名）而「：抽象名出现，那么就不优化，抽象名不出现就可以优化：」
                                            「：TODO 我们是否应该缓存现有的自由变量：」
                        有（可有「抽象名」）则（非于（自由变量在式出现于抽象名于处理后尾式））
                        或有（可无）则发生事故于『不是导出，就一定是打开，必须有抽象名』
                ）
        ））而
            若「进行优化」
            则（处理后尾式）
            否则（
                式节点于（近似结构节点于（若导出则（可有标签名）否则（可无）））于【（式节点于（定义声明近似类型节点于定义透明）于【
                                                                            定义式类，投影定义式
                                                                            】）
                                                                    ，（鉴（可能抽象名）而
                                                                            有（可有「抽象名」）则（进行抽象于抽象名于处理后尾式）
                                                                            或有（可无）则（进行无名抽象于处理后尾式））
                                                                    】
            ）
        也。



「：如果没有打开的话，返回的环境应当合输入的环境一模一样：」
「打开或导出结构处理」乃化「符列环境」而化爻「：打开：」而化爻「：导出：」 而
    化字符串列「：打开或导出的名字：」而化表达式「：打开或导出的表达式类型：」
    而「符列环境」「：后续编译的环境：」合（化表达式而表达式）「：编译后的表达式的后续处理：」也。
「打开或导出结构处理」者循打开或导出结构处理以
    会原境而会打开而会导出而会打开导出名而会原类型式而
    鉴原类型式而
        有式节点于（空签名节点）于【】则原境与（会式而式）
        或有式节点于（签名节点于（可有名））于（（类）衔「尾类型式」衔【】）则
            （虑抽象名及当前境者
                （若打开
                则（虑新境者「添加声明及操作符」于「原境」于名于（类）而
                        （可有名）与新境
                    ）
                否则（可无与原境））而
            「：如果打开的名称与模块名称是相同的，需要重命名模块名称：」
            虑名称有冲突者（爻也若打开
                            则（鉴打开导出名而
                                有「首名」衔「后名们」则「串相等」于首名于名
                                或有【】则发生事故于『打开导入结构名称不可为空』）
                            「：如果不是打开，则不会有冲突：」
                            否则（阴））而
            若「名称有冲突」「：我们需要加入一个定义 X0 = X, 然后所有的后续打开导出操作用名称X0：」
                则（
                    虑新首名称者（字符串也鉴打开导出名而
                                有「首名」衔「后名们」则下个字符序数于首名
                                或有【】则发生事故于『打开导入结构名称不可为空』）而
                    虑新结构名者（新首名称衔（放于一于打开导出名））而
                    虑首名类者（「进行对象近似类型合成」于（「符列环境读取命名环境」于「原境」）于（自由变量于（第N个于零于打开导出名）））而
                    虑后后续境及后后续处理者
                        （「打开或导出结构处理」于（「添加声明及操作符」
                                                    于（抽象名及当前境中一）
                                                    于新首名称
                                                    于首名类）
                                            于打开
                                            于导出
                                            于新结构名
                                            于（式替换于（自由变量于名）于尾类型式））而 「：TODO：这里需要修改，是不bug：」
                    虑后新处理者（化表达式而表达式）也（会原尾式而
                                    虑原先后处理者
                                        「打开或导出结构后续处理」于名于导出于（抽象名及当前境中零）于类于（结构名称转表达式于（新结构名接【名】））于（后后续境及后后续处理中一）而
                                    虑后处理后尾式者（原先后处理）于原尾式而
                                        式节点于（近似结构节点于（可无））于【（式节点于（定义声明近似类型节点于定义透明）于
                                                                                【首名类，（自由变量于（第N个于零于打开导出名））】）
                                                                                ，（进行抽象于新首名称于后处理后尾式）
                                                                            】
                                ）而
                    （后后续境及后后续处理中零与后新处理）
                ）
                否则（
                        虑后续境及后续处理者（
                                        「打开或导出结构处理」于（抽象名及当前境中一）于打开于导出于打开导出名于（式替换于（自由变量于名）于尾类型式））「：TODO： 我觉得不应该替换自有变量于名，而是结构投影：」
                            而
                        虑处理者
                            「打开或导出结构后续处理」于名于导出于（抽象名及当前境中零）于类于（结构名称转表达式于（打开导出名接【名】））于（后续境及后续处理中一）而
                        （后续境及后续处理中零与处理）
                    ）
            ）
        或有式节点于（签名节点于（可无））于（（式节点于（（操作符声明节点于名于结））于【】）衔「尾式」衔【】）则
            （虑后续境及后续处理者「打开或导出结构处理」于（若打开则「更新操作符结合及优先级」于原境于名于结否则原境）
                                于打开于导出于打开导出名
                                于（解构无绑定抽象于『解绑212』于尾式）而
            虑处理者（化表达式而表达式）也（会原尾式而
                虑处理后尾式者（后续境及后续处理中一）于原尾式而
                （若导出则
                    （式节点于（近似结构节点于（可无））于【式节点于（（操作符声明节点于名于结））于【】，进行无名抽象于处理后尾式】）
                    否则处理后尾式「：检查：如果不导出不应当在原操作符声明：」
                ）
                ）而
            （后续境及后续处理中零与处理））
        或有式节点于（签名节点于（可无））于（「其他式」衔「尾式」衔【】）则
            （虑后续境及后续处理者「打开或导出结构处理」于（原境）
                                于打开于导出于打开导出名
                                于（签名尾式替换于『230』于（可无）于其他式于尾式
                                    ）而
            虑处理者（化表达式而表达式）也（会原尾式而
                虑处理后尾式者（后续境及后续处理中一）于原尾式而
                    处理后尾式
                ）而
            （后续境及后续处理中零与处理））
        或有「其他」则发生事故于『打开的结构不符合规范：』附（表达式表示于「其他」）
    也。

打印步骤信息者阳也。
「： 打印步骤信息者阴也。 ：」


抽象语法解析声明列乃化「符列环境」而化粗声明列而表达式也。
抽象语法解析声明列者循抽象语法解析声明列以
        会符列而会粗声明列而
        （鉴「粗声明列」而有
        【】则（式节点于「空近似结构节点」于【】）
        或有（「当前粗声明」衔「粗声明列尾」）则（
            虑「
                粗略调试打印行于（会无而『正在解析声明：』 附（粗语法表示于当前粗声明））。

                解析定义声明名乃化表达式列而表达式也。
                解析定义声明名者会名而（尝试运行于（会无而解表达式于「符列」于名）于
                                （会错误而
                                    若（为纯名称于名）「：如果不能parse，且为普通名称，则按照自由变量进行parse：」
                                    则（自由变量于（纯名称不含括号于名））
                                    否则发生事故于『错误262：』附（粗语法表示于当前粗声明）附『，错误：』附（错误）
                                ）
                            ）也。

                解析纯名称者纯名称含括号也。
                解析表达式者解表达式于「符列」也。
                解析结构名者解结构名于【】也。

                「： 当前声明者（鉴当前粗声明而
                    有粗语法之粗文件操作于作于名则抽象语法之文件操作于作于（解结构名于【】于名）
                    或有粗语法之粗构造声明于名于型则抽象语法之构造声明于（纯名称含括号于名）于（解表达式于「符列」于型）
                    或有粗语法之粗类型声明于名于型则抽象语法之类型声明于定义不透明于（纯名称含括号于名）于（解表达式于「符列」于型）
                    或有粗语法之粗透明类型声明于名于型则抽象语法之类型声明于定义透明于（纯名称含括号于名）于（解表达式于「符列」于型）
                    或有粗语法之粗定义声明于名于式则抽象语法之定义声明于定义不透明于
                        （尝试运行于（会无而解表达式于「符列」于名）于
                                （会错误而
                                    若（为纯名称于名）「：如果不能parse，且为普通名称，则按照自由变量进行parse：」
                                    则（自由变量于（纯名称不含括号于名））
                                    否则发生事故于『错误262：』附（粗语法表示之表示于当前粗声明）附『，错误：』附（错误）
                                ）
                            ）于（解表达式于「符列」于式）
                    或有粗语法之粗透明定义声明于名于式则抽象语法之定义声明于定义透明于
                        （尝试运行于（会无而解表达式于「符列」于名）于
                                （会错误而
                                    若（为纯名称于名）「：如果不能parse，且为普通名称，则按照自由变量进行parse：」
                                    则（自由变量于（纯名称不含括号于名））
                                    否则发生事故于『错误261：』附（粗语法表示之表示于当前粗声明）附『，错误：』附（错误）
                                ）
                            ）于（解表达式于「符列」于式）
                    或有粗语法之「粗直接表达式」于式则抽象语法之「直接表达式」于（解表达式于「符列」于式）
                    或有粗语法之「粗操作符声明」于「符名」于结则（抽象语法之「操作符声明」于（纯名称含括号于符名）于结）
                    或有其他则（抽象语法之声明也发生事故于『抽51』）
                ）也。 ：」
                「： 粗略调试打印行于（会无而『正在根据声明更新环境：』附（声明表示于当前声明））。 ：」
 
                原先环境者「符列」也。
                结果乃表达式也。
                结果者（
                鉴当前粗声明而
                    有粗文件操作于作于「粗结构名」则（
                        虑「
                            结构名者解析结构名于粗结构名也。
                            环二及导入处理乃「符列环境」合（化表达式而表达式）也。
                            环二及导入处理者若需要导入于作则
                                （虑「
                                    新文件名者导入解析之解析导入文件名于（「符列环境读取路径」于「原先环境」）于结构名也。
                                    模块信息者（读抽象语法）于新文件名也。
                                    模块近似类型者（
                                            「获取结构的最细致近似签名」于【】于模块信息
                                            ）也。
                                    结构名末位者（第N个于（（长度于结构名）减一）于结构名）也。
                                    新环境者
                                            「添加声明及操作符」于「原先环境」于结构名末位于模块近似类型
                                        也。
                                    后处理乃化表达式而表达式也。
                                    后处理者会尾式而
                                    （
                                        若自由变量在式出现于（结构名末位）于尾式
                                        则（
                                            式节点于（近似结构节点于（可无））于
                                            【
                                                式节点于（文件导入近似类型节点于新文件名）于【】，
                                                进行抽象于（结构名末位）于尾式
                                            】
                                        ）否则（
                                            非常粗略调试打印行于（会无而『警告：未使用的导入：』附（以『之』合并「结构名」））；
                                            尾式
                                        ）
                                    ）也。

                                    （新环境）与后处理
                                」）
                                否则原先环境与（会式而式）也。

                            环二者环二及导入处理中零也。
                            「导入处理」者环二及导入处理中一也。

                            内结果者若（「或者」于（需要打开于作）于（需要导出于作））则
                                    （虑「
                                        「：如果同时导入，那么打开只打开最后一个名字：」
                                        真正结构名者若需要导入于作则【最后一个于结构名】否则结构名也。
                                        类型式者解析结构路径名称于（「符列环境读取命名环境」于环二）于真正结构名也。
                                        环三及打开导出处理者「打开或导出结构处理」于环二于（需要打开于作）于（需要导出于作）于真正结构名于类型式也。
                                        环三乃「符列环境」也。
                                        环三者环三及打开导出处理中零也。
                                        「打开导出处理」者环三及打开导出处理中一也。
                                        尾式者「抽象语法解析声明列」于（「符列环境重置当前作用域」于环三）于「粗声明列尾」也。
                                        处理后式者「打开导出处理」于尾式也。
                                        内内结果者导入处理于处理后式也。

                                        内内结果
                                    」）
                                否则（虑「
                                        尾式者「抽象语法解析声明列」于（「符列环境重置当前作用域」于环二）于「粗声明列尾」也。
                                        内内结果者导入处理于尾式也。

                                        内内结果
                                    」）也。

                            内结果
                        」
                    ）
                    或有粗构造声明于「粗名」于「粗原类」则（
                        虑（ 
                            名者解析纯名称于粗名也。
                            原类者解析表达式于粗原类也。
                            类者进行类型近似类型检查于（「符列环境读取命名环境」于原先环境）于原类也。
                            静态类者类也。
                            新环境者「添加声明及操作符」于「原先环境」于名于静态类也。
                            抽象名者名也。

                            尾式者「抽象语法解析声明列」于新环境于「粗声明列尾」也。
                            内结果者式节点于（近似结构节点于（可有名））于【
                                式节点于（构造声明近似类型节点）于【静态类，原类】
                                ，进行抽象于抽象名于尾式】也。

                            内结果
                        ）
                    ）
                    或有粗类型声明于「透性」于「粗名」于「粗原类」则（
                        虑（ 
                            名者解析纯名称于粗名也。
                            原类者解析表达式于粗原类也。
                            类者进行类型近似类型检查于（「符列环境读取命名环境」于原先环境）于原类也。
                            新环境者「添加声明及操作符」于「原先环境」于名于类也。
                            抽象名者名也。
                            尾式者「抽象语法解析声明列」于新环境于「粗声明列尾」也。
                            内结果者（
                                式节点于（近似结构节点于可有名）于
                                    【式节点于（类型声明近似类型节点于透性）于【类，原类】，
                                    进行抽象于抽象名于尾式】
                                    ）
                                    也。
                            
                            
                            内结果
                        ）
                    ）
                    或有粗操作符声明于「粗名」于结则（
                        虑（ 
                            名者解析纯名称于粗名也。
                            新环境者「更新操作符结合及优先级」于原先环境于名于结也。
                            尾式者「抽象语法解析声明列」于新环境于「粗声明列尾」也。
                            内结果者式节点于（近似结构节点于（可无））于【式节点于（操作符声明节点于名于结）于【】，进行无名抽象于尾式】也。

                            内结果
                        ）
                    ）
                    或有粗定义声明于「透性」于「粗可能名」于「粗原义」则（
                        虑（ 
                            可能名者解析定义声明名于粗可能名也。
                            原义者解析表达式于粗原义也。
                            新环境及抽象名及后续处理者 （ 鉴「可能名」而
                                            有「自由变量」于「真名」则
                                                （
                                                    若（
                                                        「符列环境字符串属于当前作用域」于原先环境于真名
                                                    ）
                                                    则（
                                                        鉴（解析单个名称于（「符列环境读取命名环境」于原先环境）于真名）而
                                                            有「可无」则
                                                                （
                                                                    发生事故于『E470：符列环境中不存在名称：』附真名
                                                                ）
                                                            或有（可有类）则（
                                                                （
                                                                    原先环境与（真名）与「：如果之前声明过，那么名称是固定的：」
                                                                        （化表达式而表达式也会尾式而
                                                                            式节点于（近似结构节点于（可有真名））于【「：重复的label会在之后进行去除，因为我们没法区分重复的定义还是reexport name：」
                                                                            式节点于（递归定义声明近似节点于透性）于【类，自由变量于真名，原义】
                                                                            ，进行无名抽象于尾式「：在真名时统一抽象：」】）
                                                                ）
                                                            ）
                                                    ）
                                                    否则（
                                                        虑类者（「进行对象近似类型合成」于（「符列环境读取命名环境」于原先环境）于原义）而
                                                        虑新境者（「添加声明及操作符」于「原先环境」于真名于类）而
                                                        （新境）与（真名）与
                                                            （化表达式而表达式也会尾式而
                                                                式节点于（近似结构节点于（可有真名））于【
                                                                式节点于（定义声明近似类型节点于透性）于【类，原义】
                                                                ，进行抽象于（真名）于尾式】）
                                                    ）
                                                ）
                                            或有其他则（「符列环境」合字符串合（化表达式而表达式）也发生事故于『暂不支持 者 左侧不是名称，得到了：』附（表达式表示于「其他」））
                                        ）也。
                            新环境者新环境及抽象名及后续处理中零也。
                            抽象名者新环境及抽象名及后续处理中一也。
                            后续处理者新环境及抽象名及后续处理中二也。
                            尾式者「抽象语法解析声明列」于新环境于「粗声明列尾」也。
                            
                            内结果乃表达式也。
                            内结果者后续处理于尾式也。「：TODO：Review the abstraction：」
                            
                            内结果
                        ）
                    ）
                    或有「粗直接表达式」于「粗原义」则 （
                        虑（ 
                            原义者解析表达式于粗原义也。

                            尾式者「抽象语法解析声明列」于原先环境于「粗声明列尾」也。
                            
                            内结果者式节点于（近似结构节点于（可无））于【
                                式节点于「直接表达式近似节点」于（【原义】），进行无名抽象于尾式】也。
                            内结果
                        ）
                    ）
                    或有「其他」则发生事故于『抽83』
                ）也。

                结果
                」
        ））也。
        



抽象语法解析编译单元乃化「符列环境」而化粗声明列而表达式也。
抽象语法解析编译单元者会符列而会甲而
    「：编译单元解析时永远重建作用域：」
    虑重置后符列者（「符列环境重置当前作用域」于「符列」）而
    虑结构者「抽象语法解析声明列」于「重置后符列」于甲而
        结构
    也。

写引用于「函数合集」之抽象语法解析编译单元引用于（会境而会列而抽象语法解析编译单元于境于「列」）。

抽象语法解析编译单元顶层乃化字符串而化粗声明列而表达式也。
抽象语法解析编译单元顶层者会当前文件名而会甲而
    抽象语法解析编译单元于（「默认操作符」与（（默认近似命名环境）与当前文件名）与【】）于甲也。