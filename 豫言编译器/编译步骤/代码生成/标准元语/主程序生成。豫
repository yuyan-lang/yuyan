「： 寻标准库之书。
观标准库之书。


寻观拓展库之顺序标识符之顺序标识符之书。




寻观标准库之操作系统之路径之书。


寻观豫言编译器之编译步骤之语法分析之函数合集之书。

「： 寻观豫言编译器之编译步骤之代码生成之代码生成之书。 ：」
「： 寻观豫言编译器之编译步骤之代码生成之代码生成工具之书。 ：」
「： 寻观豫言编译器之编译步骤之代码生成之目标信息之书。 ：」

寻观豫言编译器之编译数据之编译配置之编译期输出之书。
寻观豫言编译器之编译数据之编译配置之全局配置之书。
寻观豫言编译器之编译步骤之总体过程之编译过程工具之书。

寻观名称转译之书。
「： 寻观代码生成工具之书。 ：」
「： 寻观编译过程工具之书。 ：」

「： 寻观程序整合之书。 ：」



编译非全局主模块乃化字符串而有也。
编译非全局主模块者会路径而
    虑程序本体者（
        『val entryMain = fn () => (「：换行：」let「：换行：」』附
        （以『「：换行：」』合并（
                态射于（会路径而
                    『 (* 』附（当前路径转全局函数名于路径）附『 *) 「：换行：」』附
                    『 val _ = 』附（名称转译于（当前路径转全局函数名于路径））附『((0,0,0)); 「：换行：」』
                ）于（读引用于文件编译顺序）
            ）
        ）附『「：换行：」in 0 end』附
        『);「：换行：」』附
        （鉴（读引用于目标平台）而
               有『mlton』则（
                    『val _ = entryMain();』
                ）
                或有『polyml』则（
                    『val main = entryMain;』
                ）
                或有「其他」则（发生事故于『不认识的目标平台：』附「其他」）
        ）
    ）而
    虑无者文件系统之写文件于（（获取输出文件路径于路径）附『.sml』）于程序本体而
    元也。

写虚拟输出文件乃化字符串而化字符串而有也。
写虚拟输出文件者会虚拟输出文件路径而会虚拟入口文件路径而
        （鉴（读引用于目标平台）而
               有『mlton』则（
                        文件系统之写文件于（（获取输出文件路径于虚拟输出文件路径）附『.mlb』）
                        于（
                            『
$(SML_LIB)/basis/basis.mlb
                            
local
    ann
       "nonexhaustiveMatch ignore"
       "allowExtendedTextConsts true"
       "allowOrPats true"
    in
        ../runtime/mlton/yydependency.sml
        ../runtime/mlton/yylibrary.sml
    「：换行：」』附（以『「：换行：」』合并（态射于（会路径而
        虑相对路径者（名称转译于（（获取输出文件相对路径于路径）附『.sml』））而
        虑无者编译调试打印行于『mlton_codegen』于（会无而『正在写：』附相对路径）而
        虑无者文件系统之写文件于相对路径于（文件系统之读文件于 （（获取输出文件路径于路径）附（『.sml』）））而
        「路径合并」于『..』于相对路径
                                    ）于（（读引用于文件编译顺序）接【虚拟入口文件路径】）
                                ））附
    『「：换行：」    end
in
end』
                ）
                ）
                或有『polyml』则（
                    虑文件内容者（
                                以『「：换行：」』合并
                                        （
                                            『「：换行：」』衔
                                            （文件系统之读文件于 『runtime/mlton/yydependency.sml』）衔
                                            （文件系统之读文件于 『runtime/mlton/yylibrary.sml』）衔
                                （态射于（会路径而
                                        文件系统之读文件于
                                        （（获取输出文件路径于路径）附（『.sml』））
                                    ）于（（读引用于文件编译顺序）接【虚拟入口文件路径】）
                                ））

                            ）而
                    文件系统之写文件于（（获取输出文件路径于虚拟输出文件路径）附『.sml』）于文件内容
                ）
                或有「其他」则（发生事故于『不认识的目标平台：』附「其他」）
        ）也。



标准元语生成可执行程序并执行乃化字符串「：输入文件路径：」而整数「：退出状态：」也。
标准元语生成可执行程序并执行者会当前路径而
        虑模块名者去除路径结尾豫言拓展名于（路径之获取文件名于当前路径）而
        虑虚拟输出文件路径者『yy_』附模块名附『_豫言编译器默认执行包。豫』而
        虑运行函数者若读引用于打印执行的外部指令则操作系统之子进程之成功运行并打印结果否则操作系统之子进程之成功运行而
        虑虚拟入口文件路径者『yy_』附模块名附『_豫言编译器默认入口文件。豫』而 
        虑无者编译非全局主模块于虚拟入口文件路径而
        虑无者写虚拟输出文件于虚拟输出文件路径于虚拟入口文件路径而
        虑可执行文件输出路径者（鉴（读引用于输出可执行文件路径）而
            有（可有「输出路径」）则输出路径
            或有「可无」则（获取输出文件路径于虚拟输出文件路径）附『.exe』）而
        虑无者（爻也
            （鉴（读引用于目标平台）而
                有『mlton』则（
                        运行函数于『mlton』于（【
                        （『-output』），
                        可执行文件输出路径，
                        （（获取输出文件路径于虚拟输出文件路径）附『.mlb』）
                        】）
                    ）
                    或有『polyml』则（
                        运行函数于『polyc』于（【
                        （『-o』），
                        可执行文件输出路径，
                        （（获取输出文件路径于虚拟输出文件路径）附『.sml』）
                        】）
                    ）
                    或有「其他」则（发生事故于『不认识的目标平台：』附「其他」）
            ）
            ）而
        虑退出状态者（若读引用于仅执行编译不运行则零否则
            （
                虑可执行路径者（若路径名是绝对路径于（可执行文件输出路径）则（可执行文件输出路径）否则『./』附（可执行文件输出路径））而
                （（非常粗略调试打印行于（会无而『正在运行目标程序：     』附（可执行路径）附『 』附（以『 』合并（读引用于运行时命令行参数））））；
                操作系统之子进程之运行并传递输出于（可执行路径）于（（读引用于运行时命令行参数）））
            ）
        ）而
        退出状态
        也。

 ：」
