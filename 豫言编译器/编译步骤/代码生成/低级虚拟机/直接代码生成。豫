
寻观标准库之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之总集之书。

。
寻观豫言编译器之编译数据之编译配置之编译期输出之书。
寻观豫言编译器之编译步骤之总体过程之编译过程工具之书。






寻观拓展库之顺序标识符之顺序标识符之书。


寻观代码生成工具之书。
寻观数值运算代码生成之书。

寻观豫言编译器之编译数据之编译配置之全局配置之书。

「： 包裹函数体乃化爻而化字符串而化字符串列列而字符串列列也。
包裹函数体者会公开而会函数名而会串而
    （【『define 』附（若公开则『』否则『internal 』）附默认调用规范附『 i128 @"』附函数名附『"』附（获取普通参数签名于【『stack_top』，『entry_block_id』，『argument_data』，『return_record』】）附『 {「：换行：」』】）衔
    『br label %"入口续延名_进入标签"』衔『「：换行：」』
        衔（（串）接【【『「：换行：」}「：换行：」』】】）也。 ：」

包裹函数体前乃化爻而化字符串而字符串列也。
包裹函数体前者会公开而会函数名而
    『define 』衔（若公开则『』否则『internal 』）衔默认调用规范衔『 void @"』衔函数名衔『"』衔（获取普通参数签名于【】）衔『 {「：换行：」』衔
    『%stack_ptr_val = load i128*, i128** @"stack_ptr"「：换行：」』衔
    『%stack_ptr_val_int = ptrtoint i128* %"stack_ptr_val" to i128「：换行：」』衔
    『%stack_top = or i128 %stack_ptr_val_int, 』衔栈指针类型标记值衔『「：换行：」』衔
    『br label %"入口续延名_进入标签"「：换行：」』衔
    【】
        也。
「： 
    『%stack_top = load i128, i128* @"stack_ptr"「：换行：」』衔 ：」

包裹函数体后乃字符串列也。
包裹函数体后者【『「：换行：」}「：换行：」』】也。

直接代码生成乃化字符串「：防止重复命名的续延名：」而化（化字符串列而有）而
        化字符串而
        化表达式「：待变换的式子：」
         而字符串列「：字符串将赋值给返回名，包含换行：」也。
直接代码生成者循「直接代码生成」以会续延名而会写出而会返回名而会式而
    虑「
        保留字段者下个字符序数于『_』附续延名附『_重名_』也。

        「读名」者「读取直接变量」也。

        详细调试打印行于（会无而『直接代码生成中：』附（表达式表示于式））。

        默认返回乃化字符串列而字符串列也。
        默认返回者会串而
            『%"』衔返回名衔『" = 』衔（串接【『「：换行：」』】）也。

        空返回乃字符串列也。
        空返回者（默认返回于【『bitcast i128 0 to i128』】）也。

        创建数组乃化字符串而化字符串列而字符串列也。
        创建数组者会名而会参数而
            虑指针临时名者下个字符序数于名而
            虑新指针临时名者下个字符序数于指针临时名附『_新指针』而
            虑长度名者下个字符序数于指针临时名附『_长度』而
            虑基本名者下个字符序数于指针临时名附『_基本』而
            虑基本长度名者下个字符序数于指针临时名附『_基本长度』而
            『%"』衔指针临时名衔保留字段衔『" = load i128*, i128** @"current_allocation_ptr"「：换行：」』衔
            『%"』衔长度名衔『" = shl i128 』衔（整数表示于（长度于参数））衔『, 』衔（长度偏移）衔『「：换行：」』衔
            『%"』衔基本名衔『" = ptrtoint i128* %"』衔指针临时名衔保留字段衔『" to i128「：换行：」』衔
            『%"』衔基本长度名衔『" = or i128 %"』衔基本名衔『", %"』衔长度名衔『"「：换行：」』衔
            『%"』衔名衔『" = or i128 %"』衔基本长度名衔『", 』衔元组类型标记值衔『「：换行：」』衔
            『%"』衔新指针临时名衔『" = getelementptr i128, i128* %"』衔指针临时名衔保留字段衔『", i128 』衔（整数表示于（长度于参数））衔『「：换行：」』衔
            『store i128* %"』衔新指针临时名衔『", i128** @"current_allocation_ptr"「：换行：」』衔
            （「串联」于（
                                            态射序号于（会参数序数而会参数名而
                『%"』衔指针临时名衔保留字段衔『_』衔（整数表示于参数序数）衔『" =getelementptr i128, i128* %"』衔指针临时名衔保留字段衔『" , i128 』衔（整数表示于参数序数）衔『「：换行：」』衔
                『store i128 %"』衔（参数名）衔『", i128* %"』衔指针临时名衔保留字段衔『_』衔（整数表示于参数序数）衔『"「：换行：」』衔【】
                                            ）于参数
                ））
            也。


        转换结果乃字符串列也。
        转换结果者
        尝试运行于 （
         会无而
            鉴式而
                有（自由变量于名）则
                        默认返回于（『bitcast i128 %"』衔名衔『" to i128』衔【】）
                或有（式节点于（非自由变量节点于「变量名」）于【】）则
                    （
                        默认返回于（『bitcast i128 %"』衔「变量名」衔『" to i128』衔【】）
                    ）
                或有（式节点于（自由变量标注节点于「标注名」）于（自由变量于「新名」）衔【】）则
                        默认返回于（『bitcast i128 %"』衔新名衔『" to i128』衔【】）
                或有（式节点于（文件引用节点于「文件名」）于【】）则
                    （
                        若（读引用于「使用全局编译」）
                        则（
                            发生事故于『全局编译：不应当出现文件引用』
                        ）否则（
                            虑无者「添加文件引用」于文件名而
                                默认返回于（『load i128, i128* @"』衔（当前路径转模块全局名于文件名）衔『"』衔【】）
                        ）
                    ）
                或有（式节点于（文件内存引用节点于「文件名」）于【】）则
                    （
                        虑无者「添加文件引用」于文件名而
                               『%"文件内存引用』衔（保留字段）衔『"  = ptrtoint i128* @"』衔（当前路径转模块全局名于文件名）衔『" to i128「：换行：」』衔
                               『%"』衔（返回名）衔『" = or i128 %"文件内存引用』衔（保留字段）衔『", 』衔（静态指针类型标记值）衔『「：换行：」』衔【】

                    ）
                或有（式节点于（展开后内建节点于量）于「参数们」）则
                    （
                        虑参数名们者态射于「读名」于参数们而
                        鉴量而
                        有「内建爻阳」          则（
                                                        （默认返回于『zext i1 1 to i128』衔【】）
                                                ）
                        或有「内建爻阴」          则（
                                                        （默认返回于『zext i1 0 to i128』衔【】）
                                                ）
                        或有「内建有元」          则（空返回）
                        或有「内建函数整数相等」    则
                                （鉴参数名们而
                                有「左名」衔「右名」衔【】则（
                                    生成数值比较代码于左名于右名于保留字段于『i64』于『eq』于返回名
                                ）
                                或有「其他」则（发生事故于『期待两个参数』）
                                ）
                        或有「内建函数整数大于」    则
                                （鉴参数名们而
                                有「左名」衔「右名」衔【】则（
                                    生成数值比较代码于左名于右名于保留字段于『i64』于『sgt』于返回名
                                ）
                                或有「其他」则（发生事故于『期待两个参数』）
                                ）
                        或有「内建函数整数减」    则
                                （鉴参数名们而
                                有「左名」衔「右名」衔【】则（
                                    生成数值计算代码于左名于右名于保留字段于『i64』于『sub』于（整数类型标记值）于返回名
                                ）
                                或有「其他」则（发生事故于『期待两个参数』）
                                ）
                        或有 「其他」            则（发生事故于『未有213：』附（表达式表示于（式）））
                    ）
                或有（式节点于（整数节点于数）于【】）则
                    （
                        （默认返回于『or i128 』衔（整数表示于数）衔『, 』衔（整数类型标记值）衔【】）
                    ）
                或有（式节点于（「小数节点」于数于「整小部」）于【】）则
                    （ 
                        虑小名者下个字符序数于『小数值』而
                        虑小名二者下个字符序数于『长小数值』而
                        『%"』衔（小名）衔『" = bitcast double 』衔（（「整小部」中零））衔（『.』）衔（（「整小部」中一））衔『 to i64「：换行：」』衔
                        『%"』衔（小名二）衔『" = zext i64 %"』衔（小名）衔『" to i128「：换行：」』衔
                        （默认返回于『or i128 %"』衔「小名二」衔『", 』衔（小数类型标记值）衔【】）
                    ）
                或有（式节点于（字符串节点于串）于【】）则
                    （
                        虑串名者下个字符序数于『字符串』附保留字段而
                        （写出于（
                            【字符串声明于串名于串】
                        ）
                        ；
                        （
                        『%"字符串指针』衔保留字段衔『" = ptrtoint 』衔（字符串声明类型于串）衔（『* @"』）衔「串名」衔（『" to i128「：换行：」』）衔
                        『%"字符串长度标记』衔保留字段衔『" = shl i128 』衔（整数表示于（（字节长度于串））加一）衔『, 』衔长度偏移衔『「：换行：」』衔
                        『%"字符串带长度』衔保留字段衔『" = or i128 %"字符串指针』衔（保留字段）衔『", %"字符串长度标记』衔保留字段衔『"「：换行：」』衔
                        （默认返回于『or i128 %"字符串带长度』衔保留字段衔『", 』衔字符串类型标记值衔【】）
                        ））
                    ）
                或有（式节点于（元组构造节点）于「参数」）则
                    （
                        虑元素名们者态射于读名于参数而
                        创建数组于返回名于元素名们
                    ）
                或有（式节点于（元组解构节点于「序数」）于「元组」衔【】）则
                    （
                        虑元组名者读名于元组而
                            『%"元组数组』衔保留字段衔『" = inttoptr i128 %"』衔元组名衔『" to i128*「：换行：」』衔
                            『%"目标指针』衔保留字段衔『" = getelementptr i128, i128* %"元组数组』衔保留字段衔『", i128 』衔（整数表示于序数）衔『「：换行：」』衔
                            （默认返回于（『load i128, i128* %"目标指针』衔保留字段衔『"』衔【】））
                    ）
                或有（式节点于（指针偏移节点于「序数」）于「指针」衔【】）则
                    （
                        （默认返回于（『add i128 %"』衔（读名于指针）衔『", 』衔（整数表示于（「乘」于「序数」于「默认元素大小」））衔【】））
                    ）
                或有（式节点于（元组更新节点于「序数」）于「元组」衔「新值」衔【】）则
                    （
                        虑元组名者读名于元组而
                        虑新值名者读名于新值而
                            『%"元组数组』衔保留字段衔『" = inttoptr i128 %"』衔元组名衔『" to i128*「：换行：」』衔
                            『%"目标指针』衔保留字段衔『" = getelementptr i128, i128* %"元组数组』衔保留字段衔『", i128 』衔（整数表示于序数）衔『「：换行：」』衔
                            『store i128 %"』衔（新值名）衔『", i128* %"目标指针』衔保留字段衔『"「：换行：」』衔
                            （空返回）
                    ）
                或有（式节点于（「解析后外部调用节点无类型」于串）于「参数」）则
                （
                    虑参数名们者态射于读名于参数而
                    虑无者「添加外部调用」于串于（长度于参数）而
                            （默认返回于（『call i128 @"』衔（串）衔『"(』衔（
                                        （「串联」于（以（【『,』】）合并列（
                                            （态射于（会参数名而（ 『i128 %"』衔（参数名）衔『"』衔【】 ））于参数名们）
                                        ）））
                                    ）接（『)』衔【】）））
                ）
                或有（式节点于空值节点于【】）则
                    （默认返回于（『bitcast i128 0 to i128』衔【】））
                或有（式节点于（全局路径变量存储节点于「全局路径名」）于参衔【】）则
                    （
                        「： 虑无者「添加文件引用」于全局路径名而 ：」
                        虑参名者读名于参而
                            『store i128 %"』衔参名衔『", i128* @"』衔（当前路径转模块全局名于「全局路径名」）衔『"「：换行：」』衔
                            （空返回）
                    ）
                「：默认读取堆指针：」
                或有（式节点于（全局指针读取节点于「全局名」）于【】）则（
                            『%"读取指针』衔保留字段衔『" = load i128*, i128** @"』衔（全局名）衔『"「：换行：」』衔
                            『%"基本指针』衔保留字段衔『" = ptrtoint i128* %"读取指针』衔保留字段衔『" to i128「：换行：」』衔
                            （默认返回于（『or i128 %"基本指针』衔保留字段衔『", 』衔（全局指针类型标记值）衔『』衔【】））
                ）
                或有（式节点于（全局指针更新节点于「全局名」）于参衔【】）则（
                            『%"更新指针』衔保留字段衔『" = inttoptr i128 %"』衔（读名于参）衔『" to i128*「：换行：」』衔
                            『store i128* %"更新指针』衔保留字段衔『", i128** @"』衔（全局名）衔『"「：换行：」』衔
                            （空返回）
                ）
                或有（式节点于（函数引用调用节点）于「函数名」衔【】）则
                （
                    『%"函数调用引用』衔保留字段衔『" = inttoptr i128 %"』衔（读名于函数名）衔『" to void ()*「：换行：」』衔
                   （『musttail call void %"函数调用引用』衔保留字段衔『"()「：换行：」』衔【】）

                ）
                或有（式节点于（函数引用节点于「函数名」）于【】）则
                （
                    『%"函数引用』衔保留字段衔『" = ptrtoint void ()* @"』衔（函数名）衔『" to i128「：换行：」』衔
                   （默认返回于『or i128 %"函数引用』衔保留字段衔『", 』衔（函数指针类型标记值）衔【】）
                ）
                或有「其他」则发生事故于『未有直接代码生成497：』附（表达式表示于式）
        ） 
            于（会异常而
                发生事故于异常附『「：换行：」在直接代码生成』附（表达式表示于式）附『时』
        ） 
        也。

        非常详细调试打印行于（会无而『直接代码生成完成：』附（表达式表示于式）附『。结果是：』 ）。
        转换结果
」
也。