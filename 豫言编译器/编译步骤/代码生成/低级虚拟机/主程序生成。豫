寻标准库之书。
观标准库之书。
寻观拓展库之顺序标识符之顺序标识符之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之总集之书。



寻观豫言编译器之编译步骤之闭包转换之正则前闭包转换之书。
寻观豫言编译器之编译步骤之求值正则变换之顶层之书。
寻观豫言编译器之编译步骤之代码生成之代码生成入口之书。

寻观豫言编译器之编译步骤之代码生成准备变换之顶层之书。

寻观豫言编译器之编译步骤之语法分析之函数合集之书。





寻观豫言编译器之编译数据之编译配置之编译期输出之书。
寻观豫言编译器之编译数据之编译配置之全局配置之书。
寻观豫言编译器之编译步骤之总体过程之编译过程工具之书。

寻观豫言编译器之编译步骤之总体过程之编译文件缓存工具之书。

寻观标准库之操作系统之路径之书。
寻观代码生成工具之书。




寻观豫言编译器之编译辅助工具之命令行之版本管理之书。



编译非全局主模块乃化字符串而有也。
编译非全局主模块者会路径而
    虑初始化函数调用者（
        式节点于「内联虑」于【（式节点于「空值节点」于【】），构造抽象于『空值名』于（
            会空值名而
                从右折叠于（会当前路径而会已有式而
                虑无者「添加模块初始化调用」于（当前路径转全局函数名于当前路径）而
                    式节点于「顺序执行节点」于【
                        式节点于（函数调用于（「多参数形」于零））于【（式节点于（「函数引用节点」于（当前路径转全局函数名于当前路径））于【】）】，
                            已有式
                        】
                ）于（自由变量于空值名）于（读引用于文件编译顺序）
        ）】
    ）而
    虑文件内容语法者（
                从右折叠于（会当前路径而会已有式而
                        式节点于「顺序执行节点」于【
                            式节点于（「解析后外部调用节点无类型」于『yy_register_gc_rootpoint』）于【（式节点于（「文件内存引用节点」于（当前路径））于【】）】，
                            已有式
                        】
                ）于（初始化函数调用）于（读引用于文件编译顺序）
    ）而
    虑无者写缓存于路径于『文件内容』于（文件内容语法）而
    虑求值变换后语法者 （进行无类型求值正则变换顶层于路径于【『entryMain』与阳与（式节点于（拉姆达抽象于（「多参数形」于零））于【文件内容语法】）】）而
    虑处理后语法者（求值变换后语法）而
    虑无者写树组缓存于路径于『正则形式』于（处理后语法）而
    虑无者（单个文件代码生成顶层于（读引用于文件编译顺序）于路径于（获取输出文件路径于路径）于（代码生成准备变换顶层于路径于处理后语法））而
    虑无者进行单个文件底层编译于路径而
    元也。

编译非全局主模块带缓存乃化字符串而有也。
编译非全局主模块带缓存者会路径而
    鉴（读引用于当前模式）而
    有『worker』则（
        若（缓存存在于路径于『完成生成』）
        则（
            若（「列相等」
                于「串相等」
                于（「读串列缓存」于路径于『完成生成』）
                于（读引用于文件编译顺序））
            则（
                元
            ）
            否则（
                编译非全局主模块于路径；
                「写串列缓存」于路径于『完成生成』于（读引用于文件编译顺序）
            ）
        ）否则（
            编译非全局主模块于路径；
            「写串列缓存」于路径于『完成生成』于（读引用于文件编译顺序）
        ）
    ）
    或有「其他模式」则
    （
       编译非全局主模块于路径
    ）也。

获取链接参数乃化有而字符串列也。
获取链接参数者
    会无而
   若（读引用于「使用静态链接」）则
            （
               （若读引用于不进行优化
                则【
                （文件系统之获取当前路径于元）附『/运行时支持库/libyyrtdebug』附（当前豫言版本）附『.a』
                】
                否则【
                （文件系统之获取当前路径于元）附『/运行时支持库/libyyrtopt』附（当前豫言版本）附『.a』
                】
                ） 

            ）
            否则（
                【『-L』，（文件系统之获取当前路径于元）附『/运行时支持库』
                ，『-Wl,-rpath,./运行时支持库』
                】
                接
               （若读引用于不进行优化
                则【
                『-l』，『yyrtdebug』附（当前豫言版本）
                】
                否则【
                『-l』，『yyrtopt』附（当前豫言版本）
                】
                ） 

            ）也。

低级虚拟机生成可执行程序并执行乃化字符串「：输入文件路径：」而整数「：退出状态：」也。
低级虚拟机生成可执行程序并执行者会当前路径而
        虑模块名者去除路径结尾豫言拓展名于（路径之获取文件名于当前路径）而
        虑虚拟输出文件路径者『yy_』附模块名附『_豫言编译器默认执行包。豫』而
        虑运行函数者若读引用于打印执行的外部指令则操作系统之子进程之成功运行并打印结果否则操作系统之子进程之成功运行而
        虑虚拟主文件路径者『yy_』附模块名附『_豫言编译器默认入口文件。豫』而
        虑无者编译非全局主模块带缓存于虚拟主文件路径而
        虑无者（若读引用于进行优化
            则（（
                 
                虑无者
                （运行函数于『llvm-link』于
                    （
                        【『-o』，（（获取输出文件路径于虚拟输出文件路径）附『.bc』）】
                    接（态射于（会路径而
                        （（获取输出文件路径于路径）附（若读引用于不进行优化则『.bc』否则『.opt.bc』））
                    ）于（（读引用于文件编译顺序）接【虚拟主文件路径】）））
                ）而
                元
            ））否则元）而
        虑无者
        （若读引用于进行优化
            则（运行函数于『opt』于【『-O3』，『-o』，
                                （（获取输出文件路径于虚拟输出文件路径）附『.opt.bc』），（（获取输出文件路径于虚拟输出文件路径）附『.bc』）】）
            否则阳
        ）而
        虑可执行文件输出路径者（鉴（读引用于输出可执行文件路径）而
            有（可有「输出路径」）则输出路径
            或有「可无」则（获取输出文件路径于虚拟输出文件路径）附『.exe』）而
        虑无者（操作系统之子进程之成功运行并打印结果于『make』于【『yy_runtime_lib』】）而
        虑运行库链接参数者（
            「获取链接参数」于元
        ）而
        虑无者
        （操作系统之子进程之成功运行并打印结果于『clang』于
            （【『-o』，可执行文件输出路径
            】
            接（若读引用于进行优化
                则【
                （（获取输出文件路径于虚拟输出文件路径）附『.opt.bc』），
                『-flto』，
                『-O3』】
                否则
                （态射于（会路径而
                        （（获取输出文件路径于路径）附（『.o』））
                    ）于（（读引用于文件编译顺序）接【虚拟主文件路径】））
            ）接「运行库链接参数」
            接（【
            『-L』，『/usr/local/lib』
            】）
            接（【
                『-l』
                ，『uv』
            】）
            「： 接（【『-l』 ，『stdc++』 】） ：」
            「： 接（若（系统名称之当前系统是Linux于元）则【
                『-l』，『bsd』
            】否则【】） ：」
            接（【
                『-Wno-override-module』
            】）
            接（【『-g』
                ，『-Werror』
            】）
            ）
        ）而
        虑退出状态者（若读引用于仅执行编译不运行则零否则
            （虑可执行路径者（若路径名是绝对路径于（可执行文件输出路径）则（可执行文件输出路径）否则『./』附（可执行文件输出路径））而
                （（非常粗略调试打印行于（会无而『正在运行目标程序：     』附（可执行路径）附『 』附（以『 』合并（读引用于运行时命令行参数））））；
                操作系统之子进程之运行并传递输出于（可执行路径）于（读引用于运行时命令行参数））
            ）
        ）而
        退出状态
        也。


