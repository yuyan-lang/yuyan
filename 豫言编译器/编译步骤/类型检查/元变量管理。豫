寻观标准库之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之总集之书。

寻观豫言编译器之编译数据之抽象绑定树结构之命名环境术之书。


寻观拓展库之顺序标识符之顺序标识符之书。
寻观豫言编译器之编译数据之操作符之操作符数据结构之书。
寻观豫言编译器之编译数据之编译配置之编译期输出之书。


元变量数据立元类型也。
    对象变量数据立化（「命名环境」合表达式「：类型：」）合或可有表达式「：解析：」而元变量数据也。
    类型变量数据立化（「命名环境」）合或可有表达式「：解析：」而元变量数据也。
    模式匹配变量数据立化表达式「：类型：」合或可有表达式「：解析：」而元变量数据也。

「：TODO：使用字典而非串典：」
所有元变量乃引用类于（串典于元变量数据）也。
所有元变量者新引用于（空串典）也。

添加元变量乃化整数而化元变量数据而有也。
添加元变量者会数而会据而
    写引用于（所有元变量）于（串典插入于（读引用于所有元变量）于（整数表示于数）于据）也。

读取元变量乃化整数而元变量数据也。
读取元变量者会数而
    （串典读取于（读引用于所有元变量）于（整数表示于数））也。

元变量是类型元变量乃化整数而爻也。
元变量是类型元变量者会数而
    鉴（读取元变量于数）而
        有（类型变量数据于参）则阳
        或有「其他」则阴也。

元变量是对象元变量乃化整数而爻也。
元变量是对象元变量者会数而
    鉴（读取元变量于数）而
        有（对象变量数据于参）则阳
        或有「其他」则阴也。

元变量是模式匹配元变量乃化整数而爻也。
元变量是模式匹配元变量者会数而
    鉴（读取元变量于数）而
        有（模式匹配变量数据于参）则阳
        或有「其他」则阴也。


读取元变量环境乃化整数而命名环境也。
读取元变量环境者会数而
    鉴（读取元变量于数）而
        有对象变量数据于（（「元变境」与「元变类」）与（可能解析式））则
            元变境
        或有类型变量数据于（（「元变境」）与（可能解析式））则
            元变境
        或有模式匹配变量数据于（「元变类」与（可能解析式））则
            发生事故于『模式匹配元变量没有环境』
    也。
    
「：每当有新解析时，这个变量会被设置成阳，可用于跟踪Dynamic Unification：」
元变量有解析引用乃引用类于爻也。
元变量有解析引用者新引用于阳也。「：初始化默认是阳：」


解析元变量乃化整数而化表达式而有也。
解析元变量者会数而会式而
    虑无者详细调试打印行于（会无而『[D]元变量解析，解析?(』附（整数表示于数）附『)为』附（表达式表示于式））而
    虑无者写引用于（元变量有解析引用）于阳而
    写引用于（所有元变量）于（串典操作于（读引用于所有元变量）于（整数表示于数）于
    （会数据而鉴数据而有
        对象变量数据于（类与（可无））则对象变量数据于（类与（可有式））
        或有类型变量数据于（类与（可无））则类型变量数据于（类与（可有式））
        或有模式匹配变量数据于（类与（可无））则模式匹配变量数据于（类与（可有式））
        或有对象变量数据于（类与（可有「已有式」））则发生事故于『已有解析：』附（表达式表示于已有式）附『尝试解析：』附（表达式表示于式）
        或有类型变量数据于（类与（可有「已有式」））则发生事故于『已有解析：』附（表达式表示于已有式）附『尝试解析：』附（表达式表示于式）
        或有模式匹配变量数据于（类与（可有「已有式」））则发生事故于『已有解析：』附（表达式表示于已有式）附『尝试解析：』附（表达式表示于式）
        ））
也。


「：比较昂贵，能用最好用待定节点：」
新建对象元变量式乃化「命名环境」而化表达式「：类型：」而表达式也。
新建对象元变量式者会境而会类型而
    虑变数者下个序数于元而
    「： 虑无者详细调试打印行于（会无而『[D]创建对象元变量』附（整数表示于变数）附『，类型：』附（表达式表示于类型））而 ：」
    虑无者「添加元变量」于变数于（对象变量数据于（（境与类型）与（可无）））而
    式节点于（元变量于变数）于（态射于自由变量于（命名环境获取所有名称于境））也。

新建类型元变量式乃化「命名环境」而表达式也。
新建类型元变量式者会境而
    虑变数者下个序数于元而
    虑无者「添加元变量」于变数于（类型变量数据于（（境）与（可无）））而
    式节点于（元变量于变数）于（态射于自由变量于（命名环境获取所有名称于境））也。


归一元变量式乃化表达式而或可有表达式也。
归一元变量式者会式而
    虑无者编译调试打印行于『meta_inst_debug』于（会无而
        调试打印于『即将归一元变量式』于（式）；『即将归一元变量式』
    ）而
    虑无者编译调试打印行于『meta_inst』于（会无而
        『正在归一元变量式』附（表达式表示于式）
    ）而
    虑结果者
        （（或可有表达式）也鉴式而
            有（式节点于（元变量于「变号」）于「量参」）则
                        （鉴（读取元变量于变号）而
                            有对象变量数据于（（「元变境」与「元变类」）与（可有「解析式」））则
                                「： （虑无者（非常详细调试打印行于（会无而『量参：』附（以『，』合并（态射于表达式表示于量参））附『。环境名称：』附（以『，』合并（命名环境获取所有名称于元变境））））而
                                ） ：」
                                可有（（同时式替换于量参于（命名环境获取所有名称于元变境）于解析式））
                            或有类型变量数据于（（「元变境」）与（可有「解析式」））则
                                「： （虑无者（非常详细调试打印行于（会无而『量参：』附（以『，』合并（态射于表达式表示于量参））附『。环境名称：』附（以『，』合并（命名环境获取所有名称于元变境））））而
                                ） ：」
                                可有（（同时式替换于量参于（命名环境获取所有名称于元变境）于解析式））
                            或有模式匹配变量数据于（（「元变类」）与（可有「解析式」））则
                                （鉴量参而
                                有【】则 可有（解析式）
                                或有「其他参」则发生事故于『模式匹配元变量不应该有参数』）
                            或有「其他」则（可无）
                        ）
            或有其他则发生事故于『无法归一元变量式期待元变量式』）而
    虑无者（编译调试打印行于『meta_inst』于（会无而『归一元变量式：』附（表达式表示于式）附『 结果：』附（鉴结果而有（可有「后式」）则表达式表示于后式或有「可无」则『（可无）』）））而
    结果
        也。

表达式是元变量乃化表达式而爻也。
表达式是元变量者会式而
    鉴式而
        有（式节点于（元变量于「变号」）于「量参」）则阳
        或有其他则阴
        也。

归一所有出现的元变量乃化表达式而表达式也。
归一所有出现的元变量者循归一所有出现的元变量以会式而
    虑无者编译调试打印行于『all_meta_inst_debug』于（会无而
        调试打印于『即将归一』于（式）；『即将归一元变量式』
    ）而
    虑无者编译调试打印行于『all_meta_inst』于（会无而
        『正在归一』附（表达式表示于式）
    ）而
    （鉴式而
        有自由变量于名则式
        或有绑定变量于名则式
        或有（式节点于（元变量于「变号」）于「量参」）则
                （鉴归一元变量式于式而
                有（可有「后式」）则「归一所有出现的元变量」于后式
                或有（可无）则式）
        或有式节点于（其他节点）于参则式节点于「其他节点」于（态射于「归一所有出现的元变量」于参）
        或有绑定于名于「下式」则（抽象表达式操作于式于（会体而「归一所有出现的元变量」于体））
    ）
    也。

新建模式匹配元变量式乃化表达式「：类型：」而表达式也。
新建模式匹配元变量式者会类型而
    虑变数者下个序数于元而
    「： 虑无者详细调试打印行于（会无而『[D]创建对象元变量』附（整数表示于变数）附『，类型：』附（表达式表示于类型））而 ：」
    虑无者「添加元变量」于变数于（模式匹配变量数据于（（类型）与（可无）））而
    式节点于（元变量于变数）于（【】）也。