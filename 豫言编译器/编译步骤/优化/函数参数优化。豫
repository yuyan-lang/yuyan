

寻观标准库之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之总集之书。

。
寻观豫言编译器之编译数据之编译配置之编译期输出之书。
寻观豫言编译器之编译数据之编译配置之全局配置之书。




寻观豫言编译器之编译步骤之总体过程之编译过程工具之书。
寻观拓展库之顺序标识符之顺序标识符之书。

拉姆达转换限制者一也。

「：把可有的变量全部去除：」
不变参数替换乃
    化字符串「：原先函数名：」而
    化字符串「：新函数名：」而
    化（（（或可有字符串）列））而
    化表达式而表达式也。
不变参数替换者循不变参数替换以会原先函数名而会新函数名而会变量引用而会式而
    虑递归者「不变参数替换」于原先函数名于新函数名于变量引用而
    鉴式而
        有（式节点于（「函数调用」于（「多参数形」于「调用个数」））于
            （式节点于（函数引用节点于「调用函数名」）于【】）衔「调用参数」）则
            （
                若（「串相等」于「调用函数名」于原先函数名）
                则（
                    若（（长度于调用参数）等于（长度于变量引用））
                    则（
                        虑新参数者（滤态射于（会甲而甲）于（打表态射于（「拉链合并」于（变量引用）于（调用参数））于（
                                    会变量引用及调用参数而
                                        鉴「变量引用及调用参数」中零而
                                            有「可无」则（可有（「变量引用及调用参数」中一））
                                            或有（可有「调用变量名」）则（
                                                「可无」
                                            ）
                                        ）
                                    ）
                                ）而
                        虑后式者（式节点于（「函数调用」于（「多参数形」于（长度于新参数）））于
                            （式节点于（函数引用节点于「新函数名」）于【】）衔（新参数）
                        ）而
                        （表达式统一操作于「递归」于后式）
                    ）否则（
                        发生事故于『参数优化96_2』
                    ）
                ）
                否则（
                    （表达式统一操作于「递归」于式）
                ）
            ）
        或有「其他」则（表达式统一操作于「递归」于式）
        也。


「：把同名函数调用中的不同自由变量设成可无，之后的操作可以把可有变量消除：」
「：返回的式会被忽略：」
不变参数搜索乃化字符串「：函数名：」而化（引用类于（（或可有字符串）列））而化表达式而表达式也。
不变参数搜索者循不变参数搜索以会函数名而会变量引用而会式而
    虑递归者「不变参数搜索」于函数名于变量引用而
    鉴式而
        有（式节点于（「函数调用」于（「多参数形」于「调用个数」））于
            （式节点于（函数引用节点于「调用函数名」）于【】）衔「调用参数」）则
            （
                若（「串相等」于「调用函数名」于函数名）
                则（
                    若（（长度于调用参数）等于（长度于（读引用于变量引用）））
                    则（
                        写引用于变量引用于（
                            打表态射于（「拉链合并」于（读引用于变量引用）于（调用参数））于（
                                会变量引用及调用参数而
                                    鉴「变量引用及调用参数」中零而
                                        有「可无」则「可无」
                                        或有（可有「调用变量名」）则（
                                            虑参数者「变量引用及调用参数」中一而
                                            若（「是直接变量」于参数）
                                            则（
                                                若（「串相等」于（「读取直接变量」于参数）于「调用变量名」）
                                                    则（可有（调用变量名））
                                                    否则「可无」
                                            ）
                                            否则（
                                                「可无」
                                            ）
                                        ）
                            ）
                        ）；
                        （表达式统一操作于「递归」于式）
                    ）否则（
                        发生事故于『参数优化96_3，』附（函数名）附『，』附（表达式表示于式）附（「多态列表示」于（「可选值表示」于（会串而串））于（读引用于变量引用））
                    ）
                ）
                否则（
                    （表达式统一操作于「递归」于式）
                ）
            ）
        或有「其他」则（表达式统一操作于「递归」于式）
        也。


函数参数优化乃化字符串而化表达式而表达式也。
函数参数优化者循函数参数优化以会函数前缀名而会式而
    虑递归者「函数参数优化」于函数前缀名而
    鉴式而
     有（式节点于（结构节点于「可无」）
            于（式节点于（「函数全局声明节点」于「函数名」）于（式节点于（拉姆达抽象于（「多参数形」于「个数」））于「绑定拉体」衔【】）衔【】）
                衔「后式」衔【】）则
                （
                    虑无者编译调试打印行于『func_arg_opt』于（会无而『正在优化：』附函数名）而
                    解构多抽象并继续于「个数」于【】于「绑定拉体」于（
                        会抽象名们而会函体而
                            虑新抽象名者新引用于（态射于「可有」于「抽象名们」）而
                            虑无者不变参数搜索于函数名于新抽象名于函体而
                            虑新函数名者「下个字符序数」于（函数名附『_参数优化』）而
                            虑新函体者不变参数替换于函数名于新函数名于（读引用于新抽象名）于函体而
                            虑变化抽象名者（滤态射于（会甲而甲）于（打表态射于（「拉链合并」于（读引用于新抽象名）于（抽象名们））于（
                                            会变量引用及调用参数而
                                                鉴「变量引用及调用参数」中零而
                                                    有「可无」则（可有（「变量引用及调用参数」中一））
                                                    或有（可有「调用变量名」）则（
                                                        「可无」
                                                    ）
                                                ）
                                            ）
                                        ）而
                            虑剩余抽象名者（滤于（会变量名而自由变量在式出现于变量名于新函体）于（「列减」于「串相等」于（抽象名们）于「变化抽象名」））而
                            虑「所有新抽象名」者剩余抽象名接「变化抽象名」而
                            虑移除抽象名者「列减」于「串相等」于（抽象名们）于「所有新抽象名」而
                            
                            虑「可以优化」者（（长度于（「移除抽象名」））大于零）而
                            若「可以优化」则（
                                若（存在吗于（会变量名而自由变量在式出现于变量名于新函体）于移除抽象名）
                                则（
                                    发生事故于（『不可能124：』附函数名附（「串列表示」于（滤于（会变量名而自由变量在式出现于变量名于新函体）于移除抽象名）））
                                ）否则（
                                    虑无者编译调试打印行于『func_arg_opt』于（会无而『可以优化141：』附（「串列表示」于「所有新抽象名」）附（「串列表示」于「移除抽象名」））而
                                    虑新原先函数体者进行多抽象于（抽象名们）于（
                                        （式节点于（「函数调用」于（「多参数形」于（长度于（「所有新抽象名」））））于
                                            （式节点于（函数引用节点于「新函数名」）于【】）衔（态射于自由变量于「所有新抽象名」））
                                    ）而
                                    （式节点于（结构节点于「可无」）于
                                        （式节点于（「函数全局声明节点」于「新函数名」）于（式节点于（拉姆达抽象于（「多参数形」于（长度于（「所有新抽象名」））））于（进行多抽象于「所有新抽象名」于新函体）衔【】）衔【】）衔
                                        （式节点于（结构节点于「可无」）于
                                                （式节点于（「函数全局声明节点」于「函数名」）于（式节点于（拉姆达抽象于（「多参数形」于「个数」））于新原先函数体衔【】）衔【】）衔
                                                （「递归」于「后式」）衔【】
                                        ）衔【】）
                                ）
                            ）否则（
                                虑无者编译调试打印行于『func_arg_opt』于（会无而『不可优化149：』附函数名附（「串列表示」于剩余抽象名）附（「串列表示」于「变化抽象名」））而
                                （表达式统一操作于「递归」于式）
                            ）
                    ）
                ）
        或有「其他」则（表达式统一操作于「递归」于式）
也。



函数参数优化顶层乃化字符串而化表达式而表达式也。
函数参数优化顶层者会路径而会式而
    「函数参数优化」于（操作系统之路径之获取文件名于（去除路径结尾豫言拓展名于路径））于式也。