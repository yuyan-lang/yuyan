「： 寻观标准库之书。

寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之总集之书。







。
寻观豫言编译器之编译数据之编译配置之编译期输出之书。

寻观豫言编译器之编译数据之抽象绑定树结构之命名环境术之书。





寻观豫言编译器之编译数据之操作符之操作符数据结构之书。



寻观优化统计信息之书。
寻观优化框架之书。
寻观函数单次内联工具之书。


「：命名环境这里存储定义，而不是类型：」
常量展开乃化命名环境而化表达式而表达式也。
常量展开者循常量展开以会境而会式而
    虑绑定递归者（化表达式「：值：」而化表达式「：绑定：」而表达式也会值而会绑定式而
        带定义绑定递归于境于值于绑定式于「常量展开」
        「： 虑抽象名及式体者解构抽象不重复名称于绑定式于（命名环境获取所有名称于境）而
            进行抽象于（抽象名及式体中零）于（常量展开于（「添加声明不改变名」于『常44』于境于（抽象名及式体中零）于值）于（抽象名及式体中一）） ：」
        ）而
    虑无者「编译调试打印行」于『const_prop_trace』于（会无而『正在执行常量展开』附（表达式表示于式））而
    虑递归者常量展开于境而
    鉴式而
        有（自由变量于名）则
                （自由变量于名）
            或有式节点于「内联虑」于「实现」衔「下个」衔【】则
                （
                    鉴实现而
                        有自由变量于名则（递归于（式替换于「实现」于下个））「：这个其实属于 unfolding，不过我们直接在这里做了，unfolding专门做inline：」
                        「： 或有（式节点于（结构投影带序数于串于「序数」）于（自由变量于「结名」）衔【】）则
                            （
                                虑结定义者找到名称于境于「结名」而
                                鉴结定义而有
                                    （式节点于（正则结构结尾节点无类型）于参）则
                                    （
                                        若序数小于（长度于参）
                                        则（
                                            鉴（第N个于序数于参）而
                                                有（式节点于（自由变量标注节点于「投名」）于（自由变量于「参数名」）衔【】）则
                                                    （
                                                        若「串相等」于投名于串
                                                        则（
                                                            记录优化于元；
                                                            递归于（式替换于（自由变量于参数名）于下个）
                                                        ）否则（
                                                            发生事故于『常66：参数名不相等』
                                                        ）
                                                    ）
                                                或有「其他」则（发生事故于『常65：参数格式不正确』）
                                        ）
                                        否则（
                                            发生事故于『常67：参数不够长度』
                                        ）
                                    ）
                                或有「其他」则（
                                    式节点于「内联虑」于「实现」衔（绑定递归于「实现」于下个）衔【】
                                ）
                            ） ：」
                        或有（式节点于（元组解构节点于「序数」）于（「可能元组名」）衔【】）则
                            （
                                虑元组名者（「读取直接变量」于「可能元组名」）而
                                虑元组定义者找到名称于境于「元组名」而
                                鉴元组定义而有
                                    （式节点于（元组构造节点）于参）则
                                    （
                                        若序数小于（长度于参）
                                        则（
                                            虑可能参数名者（第N个于序数于参）而
                                            若（「是直接变量」于「可能参数名」）
                                            则（
                                                    （
                                                        记录优化于元；
                                                        递归于（式替换于（自由变量于（「读取直接变量」于「可能参数名」））于下个）
                                                    ）
                                            ）
                                            否则（发生事故于『常65：参数格式不正确』）
                                        ）
                                        否则（
                                            发生事故于『常67：参数不够长度，序数是』附（整数表示于序数）附『，可能元组名是』附（表达式表示于「可能元组名」）附『，元组定义是』附（表达式表示于元组定义）
                                        ）
                                    ）
                                    或有（式节点于（栈元组构造节点）于参）则
                                    （
                                        若序数小于（长度于参）
                                        则（
                                            虑可能参数名者（第N个于序数于参）而
                                            若（「是直接变量」于「可能参数名」）
                                            则（
                                                    （
                                                        记录优化于元；
                                                        递归于（式替换于（自由变量于（「读取直接变量」于「可能参数名」））于下个）
                                                    ）
                                            ）
                                            否则（发生事故于『常65：参数格式不正确』）
                                        ）
                                        否则（
                                            发生事故于『常67：参数不够长度，序数是』附（整数表示于序数）附『，可能元组名是』附（表达式表示于「可能元组名」）附『，元组定义是』附（表达式表示于元组定义）
                                        ）
                                    ）
                                或有「其他」则（
                                    式节点于「内联虑」于「实现」衔（绑定递归于「实现」于下个）衔【】
                                ）
                            ）
                        或有（式节点于（拉姆达抽象于「拉形」）于「拉体」衔【】）则
                        （
                            「：函数单次内联，TODO：其实我觉得可以用另一个Pass（优化遍历）：」
                            「：我们在常量展开时展开单次使用的非逃逸函数：」
                            虑函数抽象名及之后者解构抽象不重复名称于下个于（命名环境获取所有名称于境）而
                            虑函数抽象名者「函数抽象名及之后」中零而
                            虑之后者「函数抽象名及之后」中一而
                            若（（非于（检查函数内联逃逸于函数抽象名于「之后」））
                                且（（自由变量在式出现次数于函数抽象名于「之后」）等于一）
                            ）则（
                                记录优化于元；
                                递归于（
                                    「： 虑无者打印行于『正在单次内联：』附（函数抽象名）附『，内联条件：』附（爻表示于（（非于（检查函数内联逃逸于函数抽象名于「之后」））
                                                    且（（自由变量在式出现次数于函数抽象名于「之后」）等于一）
                                                ））附『，之后：』附（表达式表示于「之后」）附『，拉体：』附（表达式表示于拉体）而 ：」
                                    单次函数内联顶层于「拉体」于函数抽象名于「之后」
                                ）
                            ）否则（
                                「： 虑无者（打印行于『不可以单次内联：』附（函数抽象名）附『，内联条件一：』附（爻表示于（非于（检查函数内联逃逸于函数抽象名于「之后」）））
                                                附『，内联条件二：』附（爻表示于（（自由变量在式出现次数于函数抽象名于「之后」）等于一））
                                            附『，之后：』附（表达式表示于「之后」）附『，拉体：』附（表达式表示于拉体））而 ：」
                                「带定义优化过程」于境于「常量展开」于式
                            ）
                        ）
                        或有（式节点于（拉姆达抽象两参数）于「拉体」衔【】）则
                        （
                            「：函数单次内联，TODO：其实我觉得可以用另一个Pass（优化遍历）：」
                            「：我们在常量展开时展开单次使用的非逃逸函数：」
                            虑函数抽象名及之后者解构抽象不重复名称于下个于（命名环境获取所有名称于境）而
                            虑函数抽象名者「函数抽象名及之后」中零而
                            虑之后者「函数抽象名及之后」中一而
                            若（（非于（检查函数内联逃逸于函数抽象名于「之后」））
                                且（（自由变量在式出现次数于函数抽象名于「之后」）等于一）
                            ）则（
                                记录优化于元；
                                递归于（
                                    「： 虑无者打印行于『正在单次内联：』附（函数抽象名）附『，内联条件：』附（爻表示于（（非于（检查函数内联逃逸于函数抽象名于「之后」））
                                                    且（（自由变量在式出现次数于函数抽象名于「之后」）等于一）
                                                ））附『，之后：』附（表达式表示于「之后」）附『，拉体：』附（表达式表示于拉体）而 ：」
                                    单次函数两参数内联顶层于「拉体」于函数抽象名于「之后」
                                ）
                            ）否则（
                                「： 虑无者（打印行于『不可以单次内联：』附（函数抽象名）附『，内联条件一：』附（爻表示于（非于（检查函数内联逃逸于函数抽象名于「之后」）））
                                                附『，内联条件二：』附（爻表示于（（自由变量在式出现次数于函数抽象名于「之后」）等于一））
                                            附『，之后：』附（表达式表示于「之后」）附『，拉体：』附（表达式表示于拉体））而 ：」
                                「带定义优化过程」于境于「常量展开」于式
                            ）
                        ）
                        或有「其他」则
                        （
                            带定义优化过程于境于「常量展开」于式
                        ）
                ）
            或有「其他」则（带定义优化过程于境于「常量展开」于式）
            「： 或有（式节点于「递归内联虑无类型」于「定义式」衔「下个」衔【】）则
            （
                （式节点于「递归内联虑无类型」于（绑定递归于占位式于定义式）衔
                    （绑定递归于占位式于「下个」）衔【】）
            ）
            或有（式节点于（爻分支节点）于「爻式」衔「阳式」衔「阴式」衔【】）则
                （式节点于（爻分支节点）于（爻式）衔（递归于阳式）衔（递归于阴式）衔【】）
            或有（式节点于模式匹配于「分析式」衔「分支们」）则
                （式节点于模式匹配于（分析式）衔（态射于（递归）于分支们））
            或有（式节点于（模式匹配分支）于「模式」衔「结果」衔【】）则
                （式节点于（模式匹配分支）于（模式）衔（「常量展开」于（「添加模式匹配声明」于境于模式）于结果）衔【】）
            或有（式节点于（续延调用节点）于「续参」衔【】）则（
                （式节点于（续延调用节点）于（绑定递归于占位式于续参）衔【】）
            ）
            或有「其他」则发生事故于『常量展开，不期待的正则表达式结尾：』附（表达式表示于式） ：」
            也。


常量展开顶层乃化表达式而表达式也。
常量展开顶层者会式而
    「常量展开」于【】于式也。 ：」