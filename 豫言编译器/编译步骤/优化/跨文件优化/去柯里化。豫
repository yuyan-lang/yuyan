

寻观标准库之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之总集之书。

。
寻观豫言编译器之编译数据之编译配置之编译期输出之书。
寻观豫言编译器之编译数据之编译配置之全局配置之书。




寻观豫言编译器之编译步骤之总体过程之编译过程工具之书。
寻观拓展库之顺序标识符之顺序标识符之书。


拉姆达可以转换乃化字符串而化整数而化整数而化表达式而爻也。
拉姆达可以转换者循「拉姆达可以转换」以会递归结构名而会需要拉姆达个数而会当前拉姆达个数而会式而
    虑递归者（「拉姆达可以转换」于递归结构名于（需要拉姆达个数））而
    鉴式而
        有（式节点于（「拉姆达抽象」于「抽形」）于参衔【】）则（
            解构抽象并继续于参于（会抽象名而会函体而
                递归于（当前拉姆达个数加一）于函体
            ）
        ）
        或有「其他」则
        （
          若（「或者」于（当前拉姆达个数大于需要拉姆达个数）于（当前拉姆达个数等于需要拉姆达个数））
          则（
            「：TODO
            
            应该是如果递归 或者 复杂度 高，那么需要柯里化，
            但我目前还不知道怎么具体判断
            ：」
            若（（计算表达式复杂度于式）大于（读引用于「优化内联复杂度」））
            则（阳）
            否则（阴
                「： 若（自由变量在式出现于递归结构名于式） 「：这里如果复杂度不高后续的优化内联就会内联该函数：」
                则阳
                否则阴 ：」
                ）

          ）
          否则（
            阴
          ）
        ）
        也。

拉姆达转换乃化表达式而化字符串列而化表达式而表达式「：当前式：」合表达式「：尾式：」也。
拉姆达转换者循拉姆达转换以会最终函数式而会参数名们而会式而 
    虑递归者「拉姆达转换」于最终函数式而
    鉴式而
        有（式节点于（「拉姆达抽象」于「抽形」）于参衔【】）则（
            解构抽象并继续于参于（会抽象名而会函体而
                递归于（参数名们接【抽象名】）于函体
            ）
        ）
        或有「其他」则（
            （
                从右折叠于（会参数名而会已有式而
                    式节点于（拉姆达抽象于「显式」）于【进行抽象于参数名于已有式】
                ）于（
                    式节点于（函数调用于「显式」）于【最终函数式，式节点于（元组构造节点）于（态射于自由变量于参数名们）】
                ）于参数名们

            ）与（
                虑去柯里化闭包名者下个字符序数于（『去柯里化闭包名』）而
                式节点于（拉姆达抽象于显式）于【
                    进行抽象于「去柯里化闭包名」于（
                        从左折叠带序数于零于（会序数而会参数名而会已有式而
                            式有名替换于（式节点于（元组解构节点于序数）于【式节点于（自由变量标注节点于「参数名」）于【自由变量于「去柯里化闭包名」】】）
                                    于参数名
                                    于已有式
                        ）于（
                            式
                        ）于参数名们
                    ）
                】
            ）
        ）也。


去柯里化乃化表达式而表达式也。
去柯里化者循去柯里化以会式而
    虑递归者「去柯里化」而
    鉴式而
        有（式节点于（结构递归节点于「标签们」）于「递归结构」衔【】）则
            （
                解构抽象并继续于「递归结构」于（会递归抽象名而会结构体而
                虑「
                    新增标签名者新引用授以（字符串列）于【】也。
                    处理结构乃化表达式而表达式也。
                    处理结构者循处理结构以会结构式而
                        鉴结构式而
                            有（式节点于空结构节点于【】）则（
                                （式节点于空结构节点于【】）
                            ）
                            或有（式节点于（结构节点于「可能名」）于「当前结构」衔「后结构」衔【】）则（
                                虑无者编译调试打印行于『uncurry』于（会无而『正在检查结构式：』附（表达式表示于当前结构））而
                                    若（「拉姆达可以转换」于递归抽象名于二于零于当前结构）则（
                                        鉴「可能名」而
                                        有（可有「函数名」）则
                                        （
                                            虑无者编译调试打印行于『uncurry』于（会无而『正在去柯里化』）而
                                            虑去柯里名者下个字符序数于（函数名附『_去柯里化』）而
                                            虑转换后式者拉姆达转换于（式节点于（元组解构节点于（长度于「标签们」）加（长度于（读引用于新增标签名）））于【式节点于（自由变量标注节点于「去柯里名」）于【自由变量于递归抽象名】】）于【】于「当前结构」而
                                            虑无者（「列引用前衔」于「新增标签名」于去柯里名）而
                                            （式节点于（结构节点于「可能名」）于【
                                                （转换后式中零），
                                                （式节点于（结构节点于（可有（去柯里名）））于【
                                                    转换后式中一，
                                                    处理结构于后结构
                                                    】）
                                                】）
                                        ）
                                        或有（可无）则（
                                            虑无者编译调试打印行于『uncurry』于（会无而『无名称绑定跳过』）而
                                            （式节点于（结构节点于「可能名」）于（递归于「当前结构」）衔（处理结构于后结构）衔【】）
                                        ）
                                    ）
                                    否则（
                                        虑无者编译调试打印行于『uncurry』于（会无而『不是拉姆达抽象，跳过』）而
                                        （式节点于（结构节点于「可能名」）于（递归于「当前结构」）衔（处理结构于后结构）衔【】）
                                    ）
                                ）
                            也。
                    递归结构体者（进行抽象于递归抽象名于（处理结构于「结构体」））也。
                    （式节点于（结构递归节点于（「标签们」接（反转于（读引用于新增标签名））））于递归结构体衔【】）
                」
                ）
            ）
        或有「其他」则（表达式统一操作于「递归」于式）
也。



去柯里化顶层乃化表达式而表达式也。
去柯里化顶层者会式而
    「去柯里化」于式也。