
「： 
寻观标准库之书。

寻观豫言编译器之编译数据之操作符之操作符数据结构之书。
寻观豫言编译器之编译数据之抽象绑定树结构之命名环境术之书。
寻观优化框架之书。
寻观拓展库之顺序标识符之顺序标识符之书。
寻观豫言编译器之编译步骤之求值正则变换之重新正则变换之书。
寻观豫言编译器之编译数据之编译配置之编译期输出之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之总集之书。

寻观优化统计信息之书。
寻观基础工具之定义查找之书。
寻观树组优化工具之书。


参数优化记录类即（串典于（表达式合字符串）列）也。
「：每个元素的index 有 ⊐ 包含关系 ，
如果[(a,b), (c,d), (e,f)]是一个元素，那么 e ⊑ c ⊑ a 
：」


单参数调用信息相等乃化表达式而化表达式而爻也。
单参数调用信息相等者循单参数调用信息相等以会式甲而会式乙而
    虑递归者「单参数调用信息相等」而
    鉴（式甲与式乙）而
        有（式节点于元组构造节点于「参数们甲」）与
            （式节点于元组构造节点于「参数们乙」）则
            （
                若（长度于「参数们甲」）等于（长度于「参数们乙」）
                则（
                    「全部符合」于（会甲而甲）于（态射二于「递归」于「参数们甲」于「参数们乙」）
                ）
                否则阴
            ）
        「： 或有（式节点于栈元组构造节点于「参数们甲」）与
            （式节点于栈元组构造节点于「参数们乙」）则
            （
                若（长度于「参数们甲」）等于（长度于「参数们乙」）
                则（
                    「全部符合」于（会甲而甲）于（态射二于「递归」于「参数们甲」于「参数们乙」）
                ）
                否则阴
            ） ：」
        或有（式节点于（展开后唯一构造器节点于「序数甲」）于「参数们甲」）
            与（式节点于（展开后唯一构造器节点于「序数乙」）于「参数们乙」）则
            （
                若（序数甲等于序数乙）
                则（
                    若（长度于「参数们甲」）等于（长度于「参数们乙」）
                    则（
                        「全部符合」于（会甲而甲）于（态射二于「递归」于「参数们甲」于「参数们乙」）
                    ）
                    否则阴
                ）
                否则阴
            ）
        「： 或有（式节点于（栈展开后唯一构造器节点于「序数甲」）于「参数们甲」）
            与（式节点于（栈展开后唯一构造器节点于「序数乙」）于「参数们乙」）则
            （
                若（序数甲等于序数乙）
                则（
                    若（长度于「参数们甲」）等于（长度于「参数们乙」）
                    则（
                        「全部符合」于（会甲而甲）于（态射二于「递归」于「参数们甲」于「参数们乙」）
                    ）
                    否则阴
                ）
                否则阴
            ） ：」
        或有（式节点于待定节点于【】）与（式节点于待定节点于【】）则
            （阳）
        或有（式节点于（展开后内建节点于「量甲」）于【】）与
            （式节点于（展开后内建节点于「量乙」）于【】）则
            （
                「内建常量相等」于「量甲」于「量乙」
            ）
        或有（式节点于（整数节点于数甲）于【】）与（式节点于（整数节点于数乙）于【】）则
            （数甲等于数乙）
        或有（式节点于（「小数节点」于数甲于「整小部甲」）于【】）与（式节点于（「小数节点」于数乙于「整小部乙」）于【】）则
            （（「串相等」于（「整小部甲」中零）于（「整小部乙」中零））
                且
            （「串相等」于（「整小部甲」中零）于（「整小部乙」中零）））
        或有（式节点于（字符串节点于串甲）于【】）与（式节点于（字符串节点于串乙）于【】）则
            （「串相等」于串甲于串乙）
        或有（式节点于空值节点于【】）与（式节点于空值节点于【】）则
            （阳）
        或有（式节点于（函数引用节点于「函数名甲」）于【】）与（式节点于（函数引用节点于「函数名乙」）于【】）则
            （「串相等」于函数名甲于函数名乙）
        或有「其他」则阴
            也。



「：代表 ⊑ ，待定（⊥） 是最小的：」
单参数调用信息更具体乃化表达式而化表达式而爻也。
单参数调用信息更具体者循单参数调用信息更具体以会式甲而会式乙而
    虑递归者「单参数调用信息更具体」而
    鉴（式甲与式乙）而
        有（式节点于待定节点于【】）与「任意」则
            （阳）
        或有（式节点于元组构造节点于「参数们甲」）与
            （式节点于元组构造节点于「参数们乙」）则
            （
                若（长度于「参数们甲」）等于（长度于「参数们乙」）
                则（
                    「全部符合」于（会甲而甲）于（态射二于「递归」于「参数们甲」于「参数们乙」）
                ）
                否则阴
            ）
      
        或有（式节点于（展开后唯一构造器节点于「序数甲」）于「参数们甲」）
            与（式节点于（展开后唯一构造器节点于「序数乙」）于「参数们乙」）则
            （
                若（序数甲等于序数乙）
                则（
                    若（长度于「参数们甲」）等于（长度于「参数们乙」）
                    则（
                        「全部符合」于（会甲而甲）于（态射二于「递归」于「参数们甲」于「参数们乙」）
                    ）
                    否则阴
                ）
                否则阴
            ）
        或有「其他」则（
           「单参数调用信息相等」于式甲于式乙 
        ）
            也。

修剪单参数调用信息乃化表达式而化表达式而表达式也。
修剪单参数调用信息者循修剪单参数调用信息以会参考式而会修剪式而
    虑递归者「修剪单参数调用信息」而
    虑无者编译调试打印行于『arg_prune』于（会无而『修剪信息中：参考式：』附（表达式表示于参考式）附『 修剪式：』附（表达式表示于修剪式））而
    虑默认返回者（式节点于待定节点于【】）而
    鉴（参考式与修剪式）而
        有（式节点于待定节点于【】）与「任意」则
            （默认返回）
        或有（式节点于元组构造节点于「参数们甲」）与
            （式节点于元组构造节点于「参数们乙」）则
            （
                若（长度于「参数们甲」）等于（长度于「参数们乙」）
                则（
                    式节点于元组构造节点于（态射二于「递归」于「参数们甲」于「参数们乙」）
                ）
                否则（
                    （默认返回）
                ）
            ）
      
        或有（式节点于（展开后唯一构造器节点于「序数甲」）于「参数们甲」）
            与（式节点于（展开后唯一构造器节点于「序数乙」）于「参数们乙」）则
            （
                若（序数甲等于序数乙）
                则（
                    若（长度于「参数们甲」）等于（长度于「参数们乙」）
                    则（
                        式节点于（展开后唯一构造器节点于「序数甲」）于 （态射二于「递归」于「参数们甲」于「参数们乙」）
                    ）
                    否则（默认返回）
                ）
                否则（默认返回）
            ）
        或有「其他」则（
            若（
           「单参数调用信息相等」于参考式于修剪式
            ）则（
                修剪式
            ）否则（默认返回）
        ）
            也。

根据优化记录修剪单参数调用信息乃化（表达式合字符串）列而化表达式而表达式也。
根据优化记录修剪单参数调用信息者会已有而会修剪式而
    若（长度于「已有」）等于零
    则（发生事故于『期待已有185』）
    否则（修剪单参数调用信息于（第N个于（（长度于「已有」）减一）于「已有」）中零于修剪式）也。

获取单参数调用信息乃化命名环境而化字符串而表达式也。
获取单参数调用信息者循「获取单参数调用信息」以会境而会名而
    虑递归者「获取单参数调用信息」于境而
    虑原定义者（命名环境读取具体定义于境于名）而
    鉴原定义而
        有（式节点于元组构造节点于「参数们」）则
            （
                （式节点于元组构造节点于（态射于「递归」于（态射于「读取直接变量」于参数们）））
            ）
        「： 或有（式节点于栈元组构造节点于「参数们」）则
            （
                （式节点于栈元组构造节点于（态射于「递归」于（态射于「读取直接变量」于参数们）））
            ） ：」
        或有（式节点于（展开后唯一构造器节点于「序数」）于「参数们」）则
            （
                （式节点于（展开后唯一构造器节点于「序数」）于（态射于「递归」于（态射于「读取直接变量」于参数们）））
            ）
        「： 或有（式节点于（栈展开后唯一构造器节点于「序数」）于「参数们」）则
            （
                （式节点于（栈展开后唯一构造器节点于「序数」）于（态射于「递归」于（态射于「读取直接变量」于参数们）））
            ） ：」
        或有「其他」则
            （若（「表达式是可外联具体值」于『100』于原定义）
                则（原定义）
                否则（占位式）
            ）
        也。

查询参数优化记录乃化表达式「：当前的单参数调用信息：」而
            化（表达式合字符串）列而
            或可有字符串「：返回可能的已有新函数名：」也。
查询参数优化记录者会调用信息而会记录们而
    鉴「查找元素序数条件」于（会记录而
        「单参数调用信息更具体」于（二对子取零于记录）于（调用信息）
        ）于记录们而
        有「可无」则「可无」
        或有（可有「序数」）则（可有（（第N个于序数于记录们）中一））
        也。
 ：」

「： 
查询参数优化记录乃化字符串「：当前函数名：」而
            化表达式「：当前的单参数调用信息：」而
            化「参数优化记录类」而
            或可有字符串「：返回可能的已有新函数名：」也。
查询参数优化记录者会当前名而会调用信息而会记录而
    鉴（「串典查找」于记录于当前名）而
        有（可有（「已有优化」））则
            （鉴（滤于（会单条记录而「单参数调用信息相等」于「调用信息」于（二对子取一于单条记录））于「已有优化」）而
                有【】则「可无」
                或有（首衔【】）则（可有（二对子取零于首））
                或有（其他）则（发生事故于『优化97：多于一个记录，不该发生』）
                ）
        或有「可无」则「可无」也。

「增加参数优化记录」乃化字符串「：当前函数名：」而
                化字符串合表达式「：新的函数名及单参数式：」而
                化引用类于「参数优化记录类」而
                有也。
「增加参数优化记录」者会当前名而会新记录而会记录引用而
    若（「存在键」于（读引用于记录引用）于当前名）
    则写引用于记录引用于（「串典操作」于（读引用于记录引用）于「当前名」于（会已有优化而「新记录」衔「已有优化」））
    否则写引用于记录引用于（「串典插入」于（读引用于记录引用）于「当前名」于（【「新记录」】））也。 ：」