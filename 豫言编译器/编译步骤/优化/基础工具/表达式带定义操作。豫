寻观标准库之书。

寻观豫言编译器之编译数据之操作符之操作符数据结构之书。
寻观豫言编译器之编译数据之抽象绑定树结构之命名环境术之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之总集之书。
寻观豫言编译器之编译数据之编译配置之编译期输出之书。



带定义绑定递归带名乃化命名环境而化表达式「：值：」而化表达式「：绑定：」而
              化（化字符串而化命名环境而化表达式而表达式）而
              表达式「：最终返回的绑定式：」也。
带定义绑定递归带名者会境而会值而会绑定式而会递归函数而
    虑抽象名及式体者解构抽象不重复名称于绑定式于（命名环境获取所有名称于境）而
        进行抽象于（抽象名及式体中零）于（递归函数于（抽象名及式体中零）于（「添加声明不改变名」于『优44』于境于（抽象名及式体中零）于值）于（抽象名及式体中一））
        也。


带定义多绑定递归乃化整数而化命名环境而化表达式「：值：」而化表达式「：绑定：」而
              化（化命名环境而化表达式而表达式）而
              表达式「：最终返回的绑定式：」也。
带定义多绑定递归者循带定义多绑定递归以会个数而会境而会值而会多绑定式而会递归函数而
    虑无者编译调试打印行于『mult_bind_recurse』于（会无而『正则多绑定递归，』附（整数表示于个数）附『，』附（表达式表示于多绑定式））而
    若（个数大于零）则（
        虑无者编译调试打印行于『mult_bind_recurse』于（会无而『继续，』附（整数表示于个数）附『，』附（表达式表示于多绑定式））而
        虑抽象名及式体者解构抽象不重复名称于多绑定式于（命名环境获取所有名称于境）而
            进行抽象于（抽象名及式体中零）于（带定义多绑定递归于（个数减一）于（「添加声明不改变名」于『优27』于境于（抽象名及式体中零）于值）于值于（抽象名及式体中一）于递归函数）
    ）否则（
        虑无者编译调试打印行于『mult_bind_recurse』于（会无而『返回，』附（整数表示于个数）附『，』附（表达式表示于多绑定式））而
        递归函数于境于多绑定式
    ）也。

多绑定递归乃化整数而化表达式「：绑定：」而
              化（化表达式而表达式）而
              表达式「：最终返回的绑定式：」也。
多绑定递归者会个数而会多绑定式而会递归函数而
    带定义多绑定递归于个数于【】于（式节点于「空值节点」于【】）于多绑定式于（会境而会式而递归函数于式）也。

带定义绑定递归乃化命名环境而化表达式「：值：」而化表达式「：绑定：」而
              化（化命名环境而化表达式而表达式）而
              表达式「：最终返回的绑定式：」也。
带定义绑定递归者会境而会值而会绑定式而会递归函数而
    虑抽象名及式体者解构抽象不重复名称于绑定式于（命名环境获取所有名称于境）而
        进行抽象于（抽象名及式体中零）于（递归函数于（「添加声明不改变名」于『优44』于境于（抽象名及式体中零）于值）于（抽象名及式体中一））
        也。
        
「：用于不知道定义的变量占位（例如续延和递归变量）：」
占位式者式节点于待定节点于【】也。


表达式带定义统一操作乃化（化命名环境而化表达式而表达式）而化命名环境而化表达式而表达式也。
表达式带定义统一操作者会操作而会境而会式而
    鉴式而 
        有自由变量于名则自由变量于名
        或有绑定变量于「序数」则 （发生事故于『不应出现绑定变量443』）
        或有绑定于名于「下式」则（带定义绑定递归于境于占位式于式于操作）
        或有式节点于（结构递归节点于「标签名」）于「结构递归式」衔【】则（
            式节点于（结构递归节点于「标签名」）于【
                带定义绑定递归于境于式于「结构递归式」于操作
            】
        ）
        或有（式节点于「内联虑」于「当前式」衔「后式」衔【】）则
        （
            虑后当前式者（操作于境于「当前式」）而
            （式节点于「内联虑」于后当前式
                衔（带定义绑定递归于境于后当前式于后式于操作）
                衔【】）
        ）
        或有式节点于「名称」于「式列」则式节点于名称于（态射于（操作于境）于「式列」）
        或有「其他」则发生事故于『未有487』
        也。
