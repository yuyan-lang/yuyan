寻标准库之书。
观标准库之书。

寻观豫言编译器之编译数据之文件管理之编译文件管理器之书。

寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之总集之书。
。





寻观豫言编译器之编译步骤之语法分析之函数合集之书。

「： 寻观豫言编译器之编译步骤之代码生成之代码生成之书。
寻观豫言编译器之编译步骤之代码生成之代码生成工具之书。 ：」

寻观豫言编译器之编译数据之编译配置之编译期输出之书。
寻观豫言编译器之编译数据之编译配置之全局配置之书。

寻观豫言编译器之编译数据之文件管理之编译文件信息之书。

寻观拓展库之癸象工具之总集之书。

寻观编译过程工具之书。




读树组缓存乃化字符串「：路径：」而化字符串「：信息名：」而（字符串合爻合表达式）列也。
读树组缓存者会路径而会信息名而
    虑缓存文件路径者（获取输出文件路径于路径）附『.』附信息名附『.json』而
    虑加载式者（「抽象语法树组反序列化」于（癸象解析于（文件系统之读文件于缓存文件路径）））而
                    「加载式」也。

写树组缓存乃化字符串「：路径：」而化字符串「：信息名：」而化（字符串合爻合表达式）列而有也。
写树组缓存者会路径而会信息名而会式而
        文件系统之写文件于（获取输出文件路径于路径）附『.』附信息名附『.json』于（癸象表示于（「抽象语法树组序列化」于式））也。

读缓存乃化字符串「：路径：」而化字符串「：信息名：」而表达式也。
读缓存者会路径而会信息名而
    虑缓存文件路径者（获取输出文件路径于路径）附『.』附信息名附『.json』而
    虑无者（粗略调试打印行于（会无而『正在从缓存加载』附信息名附『：』附路径））而
    虑加载式者（「抽象语法反序列化」于（癸象解析于（文件系统之读文件于缓存文件路径）））而
    虑无者（详细调试打印行于（会无而『[D]已从缓存加载』附信息名附『：』附路径））而
                    「加载式」也。

写缓存乃化字符串「：路径：」而化字符串「：信息名：」而化表达式而有也。
写缓存者会路径而会信息名而会式而
        文件系统之写文件于（获取输出文件路径于路径）附『.』附信息名附『.json』于（癸象表示于（「抽象语法序列化」于式））也。

缓存存在乃化字符串「：路径：」而化字符串「：信息名：」而爻也。
缓存存在者会路径而会信息名而
        文件系统之路径存在于（获取输出文件路径于路径）附『.』附信息名附『.json』也。


读取文件签名乃化字符串而表达式也。
读取文件签名者会路径而
 鉴（读引用于当前模式）而
    有『worker』则（
        读缓存于路径于『正则签名』
    ）
    或有「其他模式」则
    （
        虑无者（读引用于进行编译引用）于路径而「：因为可能抽象语法是缓存的，读取抽象语法缓存不会加载依赖，我们需要手动加载依赖：」
        鉴「读取编译单元」于路径而
        有「已编译」于「抽象语法信息」于「正则签名」于「当前文件依赖」于「擦除后形式」于「代码生成信息」则
                「正则签名」
        或有「已从缓存加载」于「抽象语法信息」于「正则签名信息」于「当前文件依赖」于「擦除后形式」于「代码生成信息」则
            （鉴「正则签名信息」而
                有（可有「正则签名式」）则「正则签名式」
                或有（可无）则（
                    虑新正则签名者读缓存于路径于『正则签名』而
                    虑无者「更新编译单元」于路径于（「已从缓存加载」于抽象语法信息于（可有「新正则签名」）于「当前文件依赖」于「擦除后形式」于「代码生成信息」）而
                    新正则签名
                ）
            ）
        或有「正在编译」则发生事故于『循环引用』
        或有「尚未编译」则发生事故于『检查编译过程，应当是正在编译』
    ）也。

「：编译过程调用本方法，检查是不是可以使用缓存的抽象语法：」
读取文件缓存的抽象语法乃化字符串而或可有表达式也。
读取文件缓存的抽象语法者会路径而
    若读引用于「不加载缓存」则「可无」
    否则（
        虑缓存文件路径者（获取输出文件路径于路径）附『.抽象语法.json』而
        若文件系统之路径存在于缓存文件路径则
            （
                若（（文件系统之获得文件修改时间于缓存文件路径）「：缓存文件必须比原文件更晚创建：」
                    大于（文件系统之获得文件修改时间于路径）
                ）则（
                    虑无者（粗略调试打印行于（会无而『正在从缓存加载抽象语法：』附路径））而
                    虑新抽象语法者（「抽象语法反序列化」于（癸象解析于（文件系统之读文件于缓存文件路径）））而
                    虑无者（详细调试打印行于（会无而『[D]已从缓存加载抽象语法：』附路径附（表达式表示于「新抽象语法」）））而
                        可有（新抽象语法 ）
                ）
                否则「可无」
            ）否则「可无」
    ）
    也。

「：编译过程中具体的pass调用本方法，返回已经编译的抽象语法：」
读取抽象语法乃化字符串而表达式也。
读取抽象语法者会路径而
    鉴（读引用于当前模式）而
    有『worker』则（
        读缓存于路径于『抽象语法』
    ）
    或有「其他模式」则
    （
        鉴「读取编译单元」于路径而
        有「已编译」于「抽象语法信息」于「正则签名」于「当前文件依赖」于「擦除后形式」于「代码生成信息」则
                「抽象语法信息」
        或有「已从缓存加载」于「抽象语法信息」于「正则签名信息」于「当前文件依赖」于「擦除后形式」于「代码生成信息」则
            （鉴「抽象语法信息」而
                有（可有「抽象语法式」）则「抽象语法式」
                或有（可无）则（
                    虑新抽象语法者读缓存于路径于『抽象语法』而
                    虑无者「更新编译单元」于路径于（「已从缓存加载」于（可有「新抽象语法」）于「正则签名信息」于「当前文件依赖」于「擦除后形式」于「代码生成信息」）而
                    「： 虑无者（详细调试打印行于（会无而『[D]已从缓存加载抽象语法：』附路径附（表达式表示于「新抽象语法」）））而 ：」
                        新抽象语法
                ）
            ）
        或有「正在编译」则发生事故于『循环引用』
        或有「尚未编译」则发生事故于『检查编译过程，应当是正在编译』
    ）也。

「： 读取求值正则形式乃化字符串而表达式也。
读取求值正则形式者会路径而
鉴（读引用于当前模式）而
    有『worker』则（
        读缓存于路径于『求值正则形式』
    ）
    或有「其他模式」则
    （
        鉴「读取编译单元」于路径而
        有「已编译」于「抽象语法信息」于「正则签名」于「当前文件依赖」于「求值正则形式」于「代码生成信息」则
                「求值正则形式」
        或有「已从缓存加载」于「抽象语法信息」于「正则签名信息」于「当前文件依赖」于「求值正则形式」于「代码生成信息」则
            （鉴「求值正则形式」而
                有（可有「正则式」）则「正则式」
                或有（可无）则（
                    虑新求值正则形式者读缓存于路径于『求值正则形式』而
                    虑无者「更新编译单元」于路径于（「已从缓存加载」于「抽象语法信息」于「正则签名信息」于「当前文件依赖」于（可有「新求值正则形式」）于「代码生成信息」）而
                        新求值正则形式
                ）
            ）
        或有「正在编译」则发生事故于『循环引用』
        或有「尚未编译」则发生事故于『检查编译过程，应当是正在编译』
    ）
也。 ：」



读取擦除后形式乃化字符串而表达式也。
读取擦除后形式者会路径而
鉴（读引用于当前模式）而
    有『worker』则（
        读缓存于路径于『擦除后形式』
    ）
    或有「其他模式」则
    （
        鉴「读取编译单元」于路径而
        有「已编译」于「抽象语法信息」于「正则签名」于「当前文件依赖」于「擦除后形式」于「代码生成信息」则
                「擦除后形式」
        或有「已从缓存加载」于「抽象语法信息」于「正则签名信息」于「当前文件依赖」于「擦除后形式」于「代码生成信息」则
            （鉴「擦除后形式」而
                有（可有「正则式」）则「正则式」
                或有（可无）则（
                    虑新擦除后形式者读缓存于路径于『擦除后形式』而
                    虑无者「更新编译单元」于路径于（「已从缓存加载」于「抽象语法信息」于「正则签名信息」于「当前文件依赖」于（可有「新擦除后形式」）于「代码生成信息」）而
                        新擦除后形式
                ）
            ）
        或有「正在编译」则发生事故于『循环引用』
        或有「尚未编译」则发生事故于『检查编译过程，应当是正在编译』
    ）
也。