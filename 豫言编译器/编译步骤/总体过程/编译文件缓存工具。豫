寻观标准库之书。

寻观豫言编译器之编译数据之文件管理之编译文件管理器之书。

寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之总集之书。

寻观豫言编译器之编译步骤之语法分析之函数合集之书。

寻观豫言编译器之编译数据之编译配置之编译期输出之书。
寻观豫言编译器之编译数据之编译配置之全局配置之书。

寻观豫言编译器之编译数据之文件管理之编译文件信息之书。

寻观拓展库之癸象工具之总集之书。

寻观编译过程工具之书。

「： 写串缓存乃化字符串而化字符串而化字符串而有也。
写串缓存者会路径而会信息名而会内容而
    文件系统之写文件于（获取输出文件路径于路径）附『.』附信息名附『.json』于内容也。

读串缓存乃化字符串而化字符串而字符串也。
读串缓存者会路径而会信息名而
    文件系统之读文件于（获取输出文件路径于路径）附『.』附信息名附『.json』也。


        ：」

获取信息缓存文件路径乃化字符串而化字符串而字符串也。
获取信息缓存文件路径者会路径而会信息名而
    （获取输出文件路径于路径）附『.』附信息名附『.json』也。

表达式树组缓存者新引用授以（串典于表达式树组）于空串典也。

读树组缓存乃化字符串「：路径：」而化字符串「：信息名：」而（字符串合爻合表达式）列也。
读树组缓存者会路径而会信息名而
    虑缓存文件路径者获取信息缓存文件路径于「路径」于信息名而
    （若（存在键于（读引用于表达式树组缓存）于缓存文件路径）
    则（串典读取于（读引用于表达式树组缓存）于缓存文件路径）
    否则（
        虑无者（非常粗略调试打印行于（会无而『| | 正在从缓存加载』附信息名附『：』附路径））而
        虑加载式者（「表达式树组反序列化」于（癸象解析于（文件系统之读文件于缓存文件路径）））而
        虑无者（串典引用更新于表达式树组缓存于「缓存文件路径」于「加载式」）而
            「加载式」
    ））也。

写树组缓存乃化字符串「：路径：」而化字符串「：信息名：」而化（字符串合爻合表达式）列而有也。
写树组缓存者会路径而会信息名而会式而
    虑缓存文件路径者（获取输出文件路径于路径）附『.』附信息名附『.json』而
    虑无者串典引用更新于表达式树组缓存于「缓存文件路径」于「式」而
        文件系统之写文件于缓存文件路径于（癸象表示于（「表达式树组序列化」于式））也。
        
读串列缓存乃化字符串而化字符串而字符串列也。
读串列缓存者会路径而会信息名而
    态射于三对子取零于（读树组缓存于路径于信息名）也。
    
写串列缓存乃化字符串而化字符串而化字符串列而有也。
写串列缓存者会路径而会信息名而会式而
    写树组缓存于路径于信息名于（打表态射于「式」于（会文件名而文件名与阳与（式节点于待定节点于【】）））也。


表达式缓存者新引用授以（串典于表达式）于空串典也。

读缓存乃化字符串「：路径：」而化字符串「：信息名：」而表达式也。
读缓存者会路径而会信息名而
    虑缓存文件路径者（获取输出文件路径于路径）附『.』附信息名附『.json』而
    （若（存在键于（读引用于表达式缓存）于缓存文件路径）
    则（串典读取于（读引用于表达式缓存）于缓存文件路径）
    否则（
        虑无者（非常粗略调试打印行于（会无而『| | 正在从缓存加载』附信息名附『：』附路径））而
        虑加载式者（「抽象语法反序列化」于（癸象解析于（文件系统之读文件于缓存文件路径）））而
        虑无者（串典引用更新于表达式缓存于「缓存文件路径」于「加载式」）而
        虑无者（详细调试打印行于（会无而『[D]已从缓存加载』附信息名附『：』附路径））而
                        「加载式」
        ）
    ）也。

写缓存乃化字符串「：路径：」而化字符串「：信息名：」而化表达式而有也。
写缓存者会路径而会信息名而会式而
    虑缓存文件路径者（获取输出文件路径于路径）附『.』附信息名附『.json』而
    虑无者串典引用更新于表达式缓存于「缓存文件路径」于「式」而
        文件系统之写文件于缓存文件路径于（癸象表示于（「抽象语法序列化」于式））也。

缓存存在乃化字符串「：路径：」而化字符串「：信息名：」而爻也。
缓存存在者会路径而会信息名而
        文件系统之路径存在于（获取输出文件路径于路径）附『.』附信息名附『.json』也。


读文件依赖乃化字符串而字符串列也。
读文件依赖者会路径而「读串列缓存」于路径于『文件依赖』也。

写文件依赖乃化字符串而化字符串列而有也。
写文件依赖者会路径而会式而「写串列缓存」于路径于『文件依赖』于式也。


读抽象语法乃化字符串而表达式也。
读抽象语法者会路径而「读缓存」于路径于『抽象语法』也。

写抽象语法乃化字符串而化表达式而有也。
写抽象语法者会路径而会式而「写缓存」于路径于『抽象语法』于式也。

读正则签名乃化字符串而表达式也。
读正则签名者会路径而「读缓存」于路径于『正则签名』也。

写正则签名乃化字符串而化表达式而有也。
写正则签名者会路径而会式而「写缓存」于路径于『正则签名』于式也。

读擦除后形式乃化字符串而表达式也。
读擦除后形式者会路径而「读缓存」于路径于『擦除后形式』也。

写擦除后形式乃化字符串而化表达式而有也。
写擦除后形式者会路径而会式而「写缓存」于路径于『擦除后形式』于式也。

读优化后形式乃化字符串而表达式也。
读优化后形式者会路径而「读缓存」于路径于『优化后形式』也。

写优化后形式乃化字符串而化表达式而有也。
写优化后形式者会路径而会式而「写缓存」于路径于『优化后形式』于式也。

读闭包形式乃化字符串而表达式树组也。
读闭包形式者会路径而「读树组缓存」于路径于『闭包形式』也。

写闭包形式乃化字符串而化表达式树组而有也。
写闭包形式者会路径而会式而「写树组缓存」于路径于『闭包形式』于式也。

读求值正则形式乃化字符串而表达式树组也。
读求值正则形式者会路径而「读树组缓存」于路径于『求值正则形式』也。

写求值正则形式乃化字符串而化表达式树组而有也。
写求值正则形式者会路径而会式而「写树组缓存」于路径于『求值正则形式』于式也。

「：代码生成只是一个标记：」
写代码生成形式乃化字符串而有也。
写代码生成形式者会路径而「写串列缓存」于路径于『代码生成形式』于【】也。


信息垂直依赖乃化字符串而字符串也。
信息垂直依赖者会串而
    鉴串而
        有『正则签名』则『抽象语法』
        或有『擦除后形式』则『抽象语法』
        或有『优化后形式』则『擦除后形式』
        或有『闭包形式』则『优化后形式』
        或有『求值正则形式』则『闭包形式』
        或有『代码生成形式』则『求值正则形式』
        或有「其他」则（发生事故于『信息无依赖：』附「其他」）也。

获得所有依赖路径乃化字符串而化字符串而字符串列也。
获得所有依赖路径者会路径而会信息名而
    鉴信息名而
        有『文件依赖』则（
            【路径】
        ）
        或有「其他信息名」则（
            虑垂直依赖者「获取信息缓存文件路径」于路径于（信息垂直依赖于「其他信息名」）而
            虑水平依赖者（字符串列也
                鉴其他信息名而
                    有『闭包形式』则【】
                    或有『求值正则形式』则【】
                    或有『代码生成形式』则【】
                    或有「其他」则（态射于（会单个路径而「获取信息缓存文件路径」于单个路径于信息名）于（读文件依赖于路径））
            ）而
            垂直依赖衔水平依赖
        ）也。



信息需要更新乃化字符串而化字符串而爻也。
信息需要更新者会路径而会信息名而
    若（缓存存在于路径于信息名）
    则（
        虑「所有依赖信息路径」者「获得所有依赖路径」于路径于信息名而
        虑「当前信息修改时间」者文件系统之获得文件修改时间于（获取信息缓存文件路径于路径于信息名）而
        若（「存在吗」于（会依赖路径而
                （文件系统之获得文件修改时间于依赖路径）大于「当前信息修改时间」
            ）于「所有依赖信息路径」）
        则（
            阳
        ）
        否则（
            阴
        ）
        
    ）
    否则（
        阳
    ）也。